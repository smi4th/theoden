
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocINFINFEGEGALEGALSUPleftPLUSMINUSleftTIMESDIVIDEMODULOAND COMMA DIVIDE EGAL EGALEGAL ELSE FOR FUNCTIONDEF IF INF INFEG LBRA LPAREN MINUS MODULO NAME NUMBER OR PLUS PRINT RBRA RETURN RPAREN SEMI SUP SUPEG TIMES WHILEstart : progprog : functions main functions\n| functions main\n| main functions\n| main\n| functionsfunctions : functions function\n| functionreturn : RETURN expression SEMI\n| RETURN SEMIexpression : RETURN expression\n| RETURNfunction : FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA\n| FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA\nparam : param COMMA NAME\n| NAMEparamcall : paramcall COMMA expression\n| expressionmain : linstlinst : linst statement SEMI\n| statement SEMI\n| linst controlStruct\n| controlStruct\n| controlStruct linst\n| linst expression SEMI\n| expression SEMI\n| linst return\n| returncontrolStruct : for\n| while\n| ifexpression : NAME LPAREN paramcall RPAREN\n| NAME LPAREN RPARENstatement : PRINT LPAREN expression RPARENfor : FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRAwhile : WHILE LPAREN expression RPAREN LBRA linst RBRAif : IF LPAREN expression RPAREN LBRA linst RBRA\n| IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRAstatement : NAME EGAL expressionexpression : expression INF expression\n| expression INFEG expression\n| expression EGALEGAL expression\n| expression AND expression\n| expression OR expression\n| expression PLUS expression\n| expression TIMES expression\n| expression MINUS expression\n| expression DIVIDE expression\n| expression MODULO expression\n| expression SUP expression\n| expression SUPEG expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'FUNCTIONDEF':([0,3,4,5,6,11,13,15,16,17,23,24,25,27,29,36,37,38,53,57,58,59,80,108,110,111,112,119,120,],[7,7,7,-8,-19,-23,-28,-29,-30,-31,7,-7,7,-22,-27,-21,-24,-26,-10,7,-20,-25,-9,-14,-36,-37,-13,-35,-38,]),'PRINT':([0,3,5,6,11,13,15,16,17,24,27,29,36,37,38,53,54,58,59,80,96,99,100,101,103,104,105,106,107,108,110,111,112,115,116,117,118,119,120,],[14,14,-8,14,14,-28,-29,-30,-31,-7,-22,-27,-21,14,-26,-10,14,-20,-25,-9,14,14,14,14,14,14,14,14,14,-14,-36,-37,-13,14,14,14,14,-35,-38,]),'NAME':([0,3,5,6,7,9,11,13,15,16,17,18,24,27,29,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,60,80,89,91,95,96,99,100,101,103,104,105,106,107,108,110,111,112,115,116,117,118,119,120,],[8,8,-8,8,30,35,8,-28,-29,-30,-31,35,-7,-22,-27,35,35,35,-21,8,-26,35,35,35,35,35,35,35,35,35,35,35,35,35,-10,82,35,35,-20,-25,85,-9,35,35,102,8,8,8,8,8,82,8,8,8,-14,-36,-37,-13,8,8,8,8,-35,-38,]),'RETURN':([0,3,5,6,9,11,13,15,16,17,18,24,27,29,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,58,59,80,89,91,96,99,100,101,103,105,106,107,108,110,111,112,115,116,117,118,119,120,],[18,18,-8,18,34,18,-28,-29,-30,-31,34,-7,-22,-27,34,34,34,-21,18,-26,34,34,34,34,34,34,34,34,34,34,34,34,34,-10,34,34,-20,-25,-9,34,34,18,18,18,18,18,18,18,18,-14,-36,-37,-13,18,18,18,18,-35,-38,]),'LPAREN':([0,3,5,6,8,9,11,13,14,15,16,17,18,20,21,22,24,27,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,58,59,80,89,91,96,99,100,101,103,105,106,107,108,110,111,112,115,116,117,118,119,120,],[9,9,-8,9,32,9,9,-28,51,-29,-30,-31,9,54,55,56,-7,-22,-27,60,9,9,9,32,-21,9,-26,9,9,9,9,9,9,9,9,9,9,9,9,9,-10,9,9,-20,-25,-9,9,9,9,9,9,9,9,9,9,9,-14,-36,-37,-13,9,9,9,9,-35,-38,]),'NUMBER':([0,3,5,6,9,11,13,15,16,17,18,24,27,29,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,58,59,80,89,91,96,99,100,101,103,105,106,107,108,110,111,112,115,116,117,118,119,120,],[19,19,-8,19,19,19,-28,-29,-30,-31,19,-7,-22,-27,19,19,19,-21,19,-26,19,19,19,19,19,19,19,19,19,19,19,19,19,-10,19,19,-20,-25,-9,19,19,19,19,19,19,19,19,19,19,-14,-36,-37,-13,19,19,19,19,-35,-38,]),'FOR':([0,3,5,6,11,13,15,16,17,24,27,29,36,37,38,53,58,59,80,96,99,100,101,103,105,106,107,108,110,111,112,115,116,117,118,119,120,],[20,20,-8,20,20,-28,-29,-30,-31,-7,-22,-27,-21,20,-26,-10,-20,-25,-9,20,20,20,20,20,20,20,20,-14,-36,-37,-13,20,20,20,20,-35,-38,]),'WHILE':([0,3,5,6,11,13,15,16,17,24,27,29,36,37,38,53,58,59,80,96,99,100,101,103,105,106,107,108,110,111,112,115,116,117,118,119,120,],[21,21,-8,21,21,-28,-29,-30,-31,-7,-22,-27,-21,21,-26,-10,-20,-25,-9,21,21,21,21,21,21,21,21,-14,-36,-37,-13,21,21,21,21,-35,-38,]),'IF':([0,3,5,6,11,13,15,16,17,24,27,29,36,37,38,53,58,59,80,96,99,100,101,103,105,106,107,108,110,111,112,115,116,117,118,119,120,],[22,22,-8,22,22,-28,-29,-30,-31,-7,-22,-27,-21,22,-26,-10,-20,-25,-9,22,22,22,22,22,22,22,22,-14,-36,-37,-13,22,22,22,22,-35,-38,]),'$end':([1,2,3,4,5,6,11,13,15,16,17,23,24,25,27,29,36,37,38,53,57,58,59,80,108,110,111,112,119,120,],[0,-1,-6,-5,-8,-19,-23,-28,-29,-30,-31,-3,-7,-4,-22,-27,-21,-24,-26,-10,-2,-20,-25,-9,-14,-36,-37,-13,-35,-38,]),'EGAL':([8,82,],[31,31,]),'SEMI':([8,10,12,18,19,26,28,34,35,52,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,88,90,98,],[-54,36,38,53,-53,58,59,-12,-54,80,-39,-33,-52,-11,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,91,-32,-34,104,]),'INF':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,39,-12,-53,39,39,-12,-54,39,39,-33,39,-52,39,None,None,None,39,39,-45,-46,-47,-48,-49,None,39,39,39,39,-32,39,39,]),'INFEG':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,40,-12,-53,40,40,-12,-54,40,40,-33,40,-52,40,None,None,None,40,40,-45,-46,-47,-48,-49,None,40,40,40,40,-32,40,40,]),'EGALEGAL':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,41,-12,-53,41,41,-12,-54,41,41,-33,41,-52,41,None,None,None,41,41,-45,-46,-47,-48,-49,None,41,41,41,41,-32,41,41,]),'AND':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,42,-12,-53,42,42,-12,-54,42,42,-33,42,-52,42,-40,-41,-42,-43,42,-45,-46,-47,-48,-49,-50,42,42,42,42,-32,42,42,]),'OR':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,43,-12,-53,43,43,-12,-54,43,43,-33,43,-52,43,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,43,43,43,43,-32,43,43,]),'PLUS':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,44,-12,-53,44,44,-12,-54,44,44,-33,44,-52,44,44,44,44,44,44,-45,-46,-47,-48,-49,44,44,44,44,44,-32,44,44,]),'TIMES':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,45,-12,-53,45,45,-12,-54,45,45,-33,45,-52,45,45,45,45,45,45,45,-46,45,-48,-49,45,45,45,45,45,-32,45,45,]),'MINUS':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,46,-12,-53,46,46,-12,-54,46,46,-33,46,-52,46,46,46,46,46,46,-45,-46,-47,-48,-49,46,46,46,46,46,-32,46,46,]),'DIVIDE':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,47,-12,-53,47,47,-12,-54,47,47,-33,47,-52,47,47,47,47,47,47,47,-46,47,-48,-49,47,47,47,47,47,-32,47,47,]),'MODULO':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,48,-12,-53,48,48,-12,-54,48,48,-33,48,-52,48,48,48,48,48,48,48,-46,48,-48,-49,48,48,48,48,48,-32,48,48,]),'SUP':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,49,-12,-53,49,49,-12,-54,49,49,-33,49,-52,49,None,None,None,49,49,-45,-46,-47,-48,-49,None,49,49,49,49,-32,49,49,]),'SUPEG':([8,12,18,19,28,33,34,35,52,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,88,97,98,],[-54,50,-12,-53,50,50,-12,-54,50,50,-33,50,-52,50,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,50,50,50,50,-32,50,50,]),'RBRA':([11,13,15,16,17,27,29,36,37,38,53,58,59,80,103,105,106,107,110,111,117,118,119,120,],[-23,-28,-29,-30,-31,-22,-27,-21,-24,-26,-10,-20,-25,-9,108,110,111,112,-36,-37,119,120,-35,-38,]),'RPAREN':([19,32,33,34,35,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,86,88,90,97,102,109,],[-53,63,65,-12,-54,87,-39,88,-33,-18,-52,-11,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,90,92,93,-16,94,-32,-34,-17,-15,113,]),'COMMA':([19,34,35,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,85,86,88,97,102,],[-53,-12,-54,89,-33,-18,-52,-11,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-16,95,-32,-17,-15,]),'LBRA':([87,92,93,94,113,114,],[96,99,100,101,115,116,]),'ELSE':([111,],[114,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'prog':([0,],[2,]),'functions':([0,4,23,],[3,25,57,]),'main':([0,3,],[4,23,]),'function':([0,3,4,23,25,57,],[5,24,5,5,24,24,]),'linst':([0,3,11,96,99,100,101,115,116,],[6,6,37,103,105,106,107,117,118,]),'statement':([0,3,6,11,37,54,96,99,100,101,103,104,105,106,107,115,116,117,118,],[10,10,26,10,26,81,10,10,10,10,26,109,26,26,26,10,10,26,26,]),'controlStruct':([0,3,6,11,37,96,99,100,101,103,105,106,107,115,116,117,118,],[11,11,27,11,27,11,11,11,11,27,27,27,27,11,11,27,27,]),'expression':([0,3,6,9,11,18,31,32,34,37,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,89,91,96,99,100,101,103,105,106,107,115,116,117,118,],[12,12,28,33,12,52,61,64,66,28,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,97,98,12,12,12,12,28,28,28,28,12,12,28,28,]),'return':([0,3,6,11,37,96,99,100,101,103,105,106,107,115,116,117,118,],[13,13,29,13,29,13,13,13,13,29,29,29,29,13,13,29,29,]),'for':([0,3,6,11,37,96,99,100,101,103,105,106,107,115,116,117,118,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'while':([0,3,6,11,37,96,99,100,101,103,105,106,107,115,116,117,118,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'if':([0,3,6,11,37,96,99,100,101,103,105,106,107,115,116,117,118,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'paramcall':([32,],[62,]),'param':([60,],[86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> prog','start',1,'p_start','interpreter.py',143),
  ('prog -> functions main functions','prog',3,'p_prog','interpreter.py',318),
  ('prog -> functions main','prog',2,'p_prog','interpreter.py',319),
  ('prog -> main functions','prog',2,'p_prog','interpreter.py',320),
  ('prog -> main','prog',1,'p_prog','interpreter.py',321),
  ('prog -> functions','prog',1,'p_prog','interpreter.py',322),
  ('functions -> functions function','functions',2,'p_functions','interpreter.py',330),
  ('functions -> function','functions',1,'p_functions','interpreter.py',331),
  ('return -> RETURN expression SEMI','return',3,'p_return','interpreter.py',338),
  ('return -> RETURN SEMI','return',2,'p_return','interpreter.py',339),
  ('expression -> RETURN expression','expression',2,'p_expression_return','interpreter.py',346),
  ('expression -> RETURN','expression',1,'p_expression_return','interpreter.py',347),
  ('function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA','function',8,'p_function','interpreter.py',363),
  ('function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA','function',7,'p_function','interpreter.py',364),
  ('param -> param COMMA NAME','param',3,'p_paramdef','interpreter.py',391),
  ('param -> NAME','param',1,'p_paramdef','interpreter.py',392),
  ('paramcall -> paramcall COMMA expression','paramcall',3,'p_paramcall','interpreter.py',399),
  ('paramcall -> expression','paramcall',1,'p_paramcall','interpreter.py',400),
  ('main -> linst','main',1,'p_main','interpreter.py',407),
  ('linst -> linst statement SEMI','linst',3,'p_linst','interpreter.py',411),
  ('linst -> statement SEMI','linst',2,'p_linst','interpreter.py',412),
  ('linst -> linst controlStruct','linst',2,'p_linst','interpreter.py',413),
  ('linst -> controlStruct','linst',1,'p_linst','interpreter.py',414),
  ('linst -> controlStruct linst','linst',2,'p_linst','interpreter.py',415),
  ('linst -> linst expression SEMI','linst',3,'p_linst','interpreter.py',416),
  ('linst -> expression SEMI','linst',2,'p_linst','interpreter.py',417),
  ('linst -> linst return','linst',2,'p_linst','interpreter.py',418),
  ('linst -> return','linst',1,'p_linst','interpreter.py',419),
  ('controlStruct -> for','controlStruct',1,'p_controlStruct','interpreter.py',426),
  ('controlStruct -> while','controlStruct',1,'p_controlStruct','interpreter.py',427),
  ('controlStruct -> if','controlStruct',1,'p_controlStruct','interpreter.py',428),
  ('expression -> NAME LPAREN paramcall RPAREN','expression',4,'p_expression_function','interpreter.py',432),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_expression_function','interpreter.py',433),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_expr','interpreter.py',440),
  ('for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA','for',11,'p_for','interpreter.py',444),
  ('while -> WHILE LPAREN expression RPAREN LBRA linst RBRA','while',7,'p_while','interpreter.py',448),
  ('if -> IF LPAREN expression RPAREN LBRA linst RBRA','if',7,'p_if','interpreter.py',452),
  ('if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA','if',11,'p_if','interpreter.py',453),
  ('statement -> NAME EGAL expression','statement',3,'p_statement_assign','interpreter.py',460),
  ('expression -> expression INF expression','expression',3,'p_expression_binop_inf','interpreter.py',464),
  ('expression -> expression INFEG expression','expression',3,'p_expression_binop_inf','interpreter.py',465),
  ('expression -> expression EGALEGAL expression','expression',3,'p_expression_binop_inf','interpreter.py',466),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_inf','interpreter.py',467),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_inf','interpreter.py',468),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_inf','interpreter.py',469),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_inf','interpreter.py',470),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_inf','interpreter.py',471),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_inf','interpreter.py',472),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop_inf','interpreter.py',473),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop_inf','interpreter.py',474),
  ('expression -> expression SUPEG expression','expression',3,'p_expression_binop_inf','interpreter.py',475),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','interpreter.py',479),
  ('expression -> NUMBER','expression',1,'p_expression_number','interpreter.py',483),
  ('expression -> NAME','expression',1,'p_expression_name','interpreter.py',487),
]
