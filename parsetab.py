
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocINFINFEGEGALEGALSUPleftPLUSMINUSleftTIMESDIVIDEAND COMMA DIVIDE EGAL EGALEGAL ELSE FOR FUNCTIONDEF IF INF INFEG LBRA LPAREN MINUS NAME NUMBER OR PLUS PRINT RBRA RETURN RPAREN SEMI SUP SUPEG TIMES WHILEstart : progprog : functions main functions\n| functions main\n| main functions\n| main\n| functionsfunctions : functions function\n| functionreturn : RETURN expression SEMI\n| RETURN SEMIfunctionInst : functionInst return\n| return\n| linstfunction : FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA\n| FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA\nparam : param COMMA NAME\n| NAMEparamcall : paramcall COMMA expression\n| expressionmain : linstlinst : linst statement SEMI\n| statement SEMI\n| linst controlStruct\n| controlStruct\n| controlStruct linstcontrolStruct : for\n| while\n| ifstatement : NAME LPAREN paramcall RPAREN\n| NAME LPAREN RPARENstatement : PRINT LPAREN expression RPARENfor : FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRAwhile : WHILE LPAREN expression RPAREN LBRA linst RBRAif : IF LPAREN expression RPAREN LBRA linst RBRA\n| IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRAstatement : NAME EGAL expressionexpression : expression INF expression\n| expression INFEG expression\n| expression EGALEGAL expression\n| expression AND expression\n| expression OR expression\n| expression PLUS expression\n| expression TIMES expression\n| expression MINUS expression\n| expression DIVIDE expression\n| expression SUP expression\n| expression SUPEG expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAMEexpression : NAME LPAREN paramcall RPAREN'
    
_lr_action_items = {'FUNCTIONDEF':([0,3,4,5,6,10,12,13,14,18,19,20,22,26,27,32,33,99,104,105,106,114,115,],[7,7,7,-8,-20,-24,-26,-27,-28,7,-7,7,-23,-22,-25,7,-21,-15,-33,-34,-14,-32,-35,]),'NAME':([0,3,5,6,7,10,12,13,14,19,22,24,25,26,27,28,29,30,31,33,34,36,49,52,53,54,55,56,57,58,59,60,61,62,63,65,69,70,86,87,88,92,93,95,96,97,99,104,105,106,110,111,112,113,114,115,],[8,8,-8,8,23,8,-26,-27,-28,-7,-23,35,35,-22,8,35,8,35,35,-21,46,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,89,8,8,8,8,8,35,8,8,8,-15,-33,-34,-14,8,8,8,8,-32,-35,]),'PRINT':([0,3,5,6,10,12,13,14,19,22,26,27,29,33,70,86,87,88,92,95,96,97,99,104,105,106,110,111,112,113,114,115,],[11,11,-8,11,11,-26,-27,-28,-7,-23,-22,11,11,-21,11,11,11,11,11,11,11,11,-15,-33,-34,-14,11,11,11,11,-32,-35,]),'FOR':([0,3,5,6,10,12,13,14,19,22,26,27,33,70,86,87,88,92,96,97,99,104,105,106,110,111,112,113,114,115,],[15,15,-8,15,15,-26,-27,-28,-7,-23,-22,15,-21,15,15,15,15,15,15,15,-15,-33,-34,-14,15,15,15,15,-32,-35,]),'WHILE':([0,3,5,6,10,12,13,14,19,22,26,27,33,70,86,87,88,92,96,97,99,104,105,106,110,111,112,113,114,115,],[16,16,-8,16,16,-26,-27,-28,-7,-23,-22,16,-21,16,16,16,16,16,16,16,-15,-33,-34,-14,16,16,16,16,-32,-35,]),'IF':([0,3,5,6,10,12,13,14,19,22,26,27,33,70,86,87,88,92,96,97,99,104,105,106,110,111,112,113,114,115,],[17,17,-8,17,17,-26,-27,-28,-7,-23,-22,17,-21,17,17,17,17,17,17,17,-15,-33,-34,-14,17,17,17,17,-32,-35,]),'$end':([1,2,3,4,5,6,10,12,13,14,18,19,20,22,26,27,32,33,99,104,105,106,114,115,],[0,-1,-6,-5,-8,-20,-24,-26,-27,-28,-3,-7,-4,-23,-22,-25,-2,-21,-15,-33,-34,-14,-32,-35,]),'LPAREN':([8,11,15,16,17,23,24,25,28,30,31,35,36,49,52,53,54,55,56,57,58,59,60,61,62,63,65,93,],[24,28,29,30,31,34,36,36,36,36,36,49,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'EGAL':([8,],[25,]),'SEMI':([9,21,35,38,40,41,43,51,64,72,74,75,76,77,78,79,80,81,82,83,84,85,93,94,101,],[26,33,-50,-30,-49,-36,65,-29,-31,-48,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,95,102,-51,107,]),'RBRA':([10,12,13,14,22,26,27,33,90,91,92,96,97,98,100,102,104,105,107,112,113,114,115,],[-24,-26,-27,-28,-23,-22,-25,-21,99,-12,-13,104,105,106,-11,-10,-33,-34,-9,114,115,-32,-35,]),'RETURN':([10,12,13,14,22,26,27,33,70,88,90,91,92,98,100,102,104,105,107,114,115,],[-24,-26,-27,-28,-23,-22,-25,-21,93,93,93,-12,-13,93,-11,-10,-33,-34,-9,-32,-35,]),'RPAREN':([24,34,35,37,38,39,40,41,42,44,45,46,47,50,51,64,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,94,103,],[38,48,-50,51,-30,-19,-49,-36,64,66,67,-17,68,72,-29,-31,94,-48,-18,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-16,-51,108,]),'NUMBER':([24,25,28,30,31,36,49,52,53,54,55,56,57,58,59,60,61,62,63,65,93,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'INF':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,53,-49,53,53,53,53,53,-48,53,None,None,None,53,53,-42,-43,-44,-45,None,53,53,-51,53,]),'INFEG':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,54,-49,54,54,54,54,54,-48,54,None,None,None,54,54,-42,-43,-44,-45,None,54,54,-51,54,]),'EGALEGAL':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,55,-49,55,55,55,55,55,-48,55,None,None,None,55,55,-42,-43,-44,-45,None,55,55,-51,55,]),'AND':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,56,-49,56,56,56,56,56,-48,56,-37,-38,-39,-40,56,-42,-43,-44,-45,-46,56,56,-51,56,]),'OR':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,57,-49,57,57,57,57,57,-48,57,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,57,57,-51,57,]),'PLUS':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,58,-49,58,58,58,58,58,-48,58,58,58,58,58,58,-42,-43,-44,-45,58,58,58,-51,58,]),'TIMES':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,59,-49,59,59,59,59,59,-48,59,59,59,59,59,59,59,-43,59,-45,59,59,59,-51,59,]),'MINUS':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,60,-49,60,60,60,60,60,-48,60,60,60,60,60,60,-42,-43,-44,-45,60,60,60,-51,60,]),'DIVIDE':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,61,-49,61,61,61,61,61,-48,61,61,61,61,61,61,61,-43,61,-45,61,61,61,-51,61,]),'SUP':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,62,-49,62,62,62,62,62,-48,62,None,None,None,62,62,-42,-43,-44,-45,None,62,62,-51,62,]),'SUPEG':([35,39,40,41,42,44,45,50,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,101,],[-50,63,-49,63,63,63,63,63,-48,63,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,63,63,-51,63,]),'COMMA':([35,37,39,40,46,47,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,94,],[-50,52,-19,-49,-17,69,52,-48,-18,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-16,-51,]),'LBRA':([48,66,67,68,108,109,],[70,86,87,88,110,111,]),'ELSE':([105,],[109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'prog':([0,],[2,]),'functions':([0,4,18,],[3,20,32,]),'main':([0,3,],[4,18,]),'function':([0,3,4,18,20,32,],[5,19,5,5,19,19,]),'linst':([0,3,10,70,86,87,88,110,111,],[6,6,27,92,96,97,92,112,113,]),'statement':([0,3,6,10,27,29,70,86,87,88,92,95,96,97,110,111,112,113,],[9,9,21,9,21,43,9,9,9,9,21,103,21,21,9,9,21,21,]),'controlStruct':([0,3,6,10,27,70,86,87,88,92,96,97,110,111,112,113,],[10,10,22,10,22,10,10,10,10,22,22,22,10,10,22,22,]),'for':([0,3,6,10,27,70,86,87,88,92,96,97,110,111,112,113,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([0,3,6,10,27,70,86,87,88,92,96,97,110,111,112,113,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'if':([0,3,6,10,27,70,86,87,88,92,96,97,110,111,112,113,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'paramcall':([24,49,],[37,71,]),'expression':([24,25,28,30,31,36,49,52,53,54,55,56,57,58,59,60,61,62,63,65,93,],[39,41,42,44,45,50,39,73,74,75,76,77,78,79,80,81,82,83,84,85,101,]),'param':([34,],[47,]),'functionInst':([70,88,],[90,98,]),'return':([70,88,90,98,],[91,91,100,100,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> prog','start',1,'p_start','interpreter.py',121),
  ('prog -> functions main functions','prog',3,'p_prog','interpreter.py',243),
  ('prog -> functions main','prog',2,'p_prog','interpreter.py',244),
  ('prog -> main functions','prog',2,'p_prog','interpreter.py',245),
  ('prog -> main','prog',1,'p_prog','interpreter.py',246),
  ('prog -> functions','prog',1,'p_prog','interpreter.py',247),
  ('functions -> functions function','functions',2,'p_functions','interpreter.py',255),
  ('functions -> function','functions',1,'p_functions','interpreter.py',256),
  ('return -> RETURN expression SEMI','return',3,'p_return','interpreter.py',263),
  ('return -> RETURN SEMI','return',2,'p_return','interpreter.py',264),
  ('functionInst -> functionInst return','functionInst',2,'p_function_inst','interpreter.py',271),
  ('functionInst -> return','functionInst',1,'p_function_inst','interpreter.py',272),
  ('functionInst -> linst','functionInst',1,'p_function_inst','interpreter.py',273),
  ('function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA','function',8,'p_function','interpreter.py',289),
  ('function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA','function',7,'p_function','interpreter.py',290),
  ('param -> param COMMA NAME','param',3,'p_paramdef','interpreter.py',317),
  ('param -> NAME','param',1,'p_paramdef','interpreter.py',318),
  ('paramcall -> paramcall COMMA expression','paramcall',3,'p_paramcall','interpreter.py',325),
  ('paramcall -> expression','paramcall',1,'p_paramcall','interpreter.py',326),
  ('main -> linst','main',1,'p_main','interpreter.py',333),
  ('linst -> linst statement SEMI','linst',3,'p_linst','interpreter.py',337),
  ('linst -> statement SEMI','linst',2,'p_linst','interpreter.py',338),
  ('linst -> linst controlStruct','linst',2,'p_linst','interpreter.py',339),
  ('linst -> controlStruct','linst',1,'p_linst','interpreter.py',340),
  ('linst -> controlStruct linst','linst',2,'p_linst','interpreter.py',341),
  ('controlStruct -> for','controlStruct',1,'p_controlStruct','interpreter.py',348),
  ('controlStruct -> while','controlStruct',1,'p_controlStruct','interpreter.py',349),
  ('controlStruct -> if','controlStruct',1,'p_controlStruct','interpreter.py',350),
  ('statement -> NAME LPAREN paramcall RPAREN','statement',4,'p_statement_function','interpreter.py',354),
  ('statement -> NAME LPAREN RPAREN','statement',3,'p_statement_function','interpreter.py',355),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_expr','interpreter.py',362),
  ('for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA','for',11,'p_for','interpreter.py',366),
  ('while -> WHILE LPAREN expression RPAREN LBRA linst RBRA','while',7,'p_while','interpreter.py',370),
  ('if -> IF LPAREN expression RPAREN LBRA linst RBRA','if',7,'p_if','interpreter.py',374),
  ('if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA','if',11,'p_if','interpreter.py',375),
  ('statement -> NAME EGAL expression','statement',3,'p_statement_assign','interpreter.py',382),
  ('expression -> expression INF expression','expression',3,'p_expression_binop_inf','interpreter.py',386),
  ('expression -> expression INFEG expression','expression',3,'p_expression_binop_inf','interpreter.py',387),
  ('expression -> expression EGALEGAL expression','expression',3,'p_expression_binop_inf','interpreter.py',388),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_inf','interpreter.py',389),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_inf','interpreter.py',390),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_inf','interpreter.py',391),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_inf','interpreter.py',392),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_inf','interpreter.py',393),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_inf','interpreter.py',394),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop_inf','interpreter.py',395),
  ('expression -> expression SUPEG expression','expression',3,'p_expression_binop_inf','interpreter.py',396),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','interpreter.py',401),
  ('expression -> NUMBER','expression',1,'p_expression_number','interpreter.py',405),
  ('expression -> NAME','expression',1,'p_expression_name','interpreter.py',409),
  ('expression -> NAME LPAREN paramcall RPAREN','expression',4,'p_expression_call','interpreter.py',413),
]
