Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> prog
Rule 2     prog -> functions main functions
Rule 3     prog -> functions main
Rule 4     prog -> main functions
Rule 5     prog -> main
Rule 6     prog -> functions
Rule 7     functions -> functions function
Rule 8     functions -> function
Rule 9     return -> RETURN expression SEMI
Rule 10    return -> RETURN SEMI
Rule 11    functionInst -> functionInst return
Rule 12    functionInst -> return
Rule 13    functionInst -> linst
Rule 14    function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA
Rule 15    function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA
Rule 16    param -> param COMMA NAME
Rule 17    param -> NAME
Rule 18    paramcall -> paramcall COMMA expression
Rule 19    paramcall -> expression
Rule 20    main -> linst
Rule 21    linst -> linst statement SEMI
Rule 22    linst -> statement SEMI
Rule 23    linst -> linst controlStruct
Rule 24    linst -> controlStruct
Rule 25    linst -> controlStruct linst
Rule 26    controlStruct -> for
Rule 27    controlStruct -> while
Rule 28    controlStruct -> if
Rule 29    statement -> NAME LPAREN paramcall RPAREN
Rule 30    statement -> NAME LPAREN RPAREN
Rule 31    statement -> PRINT LPAREN expression RPAREN
Rule 32    for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
Rule 33    while -> WHILE LPAREN expression RPAREN LBRA linst RBRA
Rule 34    if -> IF LPAREN expression RPAREN LBRA linst RBRA
Rule 35    if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA
Rule 36    statement -> NAME EGAL expression
Rule 37    expression -> expression INF expression
Rule 38    expression -> expression INFEG expression
Rule 39    expression -> expression EGALEGAL expression
Rule 40    expression -> expression AND expression
Rule 41    expression -> expression OR expression
Rule 42    expression -> expression PLUS expression
Rule 43    expression -> expression TIMES expression
Rule 44    expression -> expression MINUS expression
Rule 45    expression -> expression DIVIDE expression
Rule 46    expression -> expression SUP expression
Rule 47    expression -> expression SUPEG expression
Rule 48    expression -> LPAREN expression RPAREN
Rule 49    expression -> NUMBER
Rule 50    expression -> NAME
Rule 51    expression -> NAME LPAREN paramcall RPAREN

Terminals, with rules where they appear

AND                  : 40
COMMA                : 16 18
DIVIDE               : 45
EGAL                 : 36
EGALEGAL             : 39
ELSE                 : 35
FOR                  : 32
FUNCTIONDEF          : 14 15
IF                   : 34 35
INF                  : 37
INFEG                : 38
LBRA                 : 14 15 32 33 34 35 35
LPAREN               : 14 15 29 30 31 32 33 34 35 48 51
MINUS                : 44
NAME                 : 14 15 16 17 29 30 36 50 51
NUMBER               : 49
OR                   : 41
PLUS                 : 42
PRINT                : 31
RBRA                 : 14 15 32 33 34 35 35
RETURN               : 9 10
RPAREN               : 14 15 29 30 31 32 33 34 35 48 51
SEMI                 : 9 10 21 22 32 32
SUP                  : 46
SUPEG                : 47
TIMES                : 43
WHILE                : 33
error                : 

Nonterminals, with rules where they appear

controlStruct        : 23 24 25
expression           : 9 18 19 31 32 33 34 35 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48
for                  : 26
function             : 7 8
functionInst         : 11 14 15
functions            : 2 2 3 4 6 7
if                   : 28
linst                : 13 20 21 23 25 32 33 34 35 35
main                 : 2 3 4 5
param                : 14 16
paramcall            : 18 29 51
prog                 : 1
return               : 11 12
start                : 0
statement            : 21 22 32 32
while                : 27

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . prog
    (2) prog -> . functions main functions
    (3) prog -> . functions main
    (4) prog -> . main functions
    (5) prog -> . main
    (6) prog -> . functions
    (7) functions -> . functions function
    (8) functions -> . function
    (20) main -> . linst
    (14) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA
    (15) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA
    (21) linst -> . linst statement SEMI
    (22) linst -> . statement SEMI
    (23) linst -> . linst controlStruct
    (24) linst -> . controlStruct
    (25) linst -> . controlStruct linst
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    FUNCTIONDEF     shift and go to state 7
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    start                          shift and go to state 1
    prog                           shift and go to state 2
    functions                      shift and go to state 3
    main                           shift and go to state 4
    function                       shift and go to state 5
    linst                          shift and go to state 6
    statement                      shift and go to state 9
    controlStruct                  shift and go to state 10
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 1

    (0) S' -> start .



state 2

    (1) start -> prog .

    $end            reduce using rule 1 (start -> prog .)


state 3

    (2) prog -> functions . main functions
    (3) prog -> functions . main
    (6) prog -> functions .
    (7) functions -> functions . function
    (20) main -> . linst
    (14) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA
    (15) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA
    (21) linst -> . linst statement SEMI
    (22) linst -> . statement SEMI
    (23) linst -> . linst controlStruct
    (24) linst -> . controlStruct
    (25) linst -> . controlStruct linst
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    $end            reduce using rule 6 (prog -> functions .)
    FUNCTIONDEF     shift and go to state 7
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    main                           shift and go to state 18
    function                       shift and go to state 19
    linst                          shift and go to state 6
    statement                      shift and go to state 9
    controlStruct                  shift and go to state 10
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 4

    (4) prog -> main . functions
    (5) prog -> main .
    (7) functions -> . functions function
    (8) functions -> . function
    (14) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA
    (15) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA

    $end            reduce using rule 5 (prog -> main .)
    FUNCTIONDEF     shift and go to state 7

    functions                      shift and go to state 20
    function                       shift and go to state 5

state 5

    (8) functions -> function .

    FUNCTIONDEF     reduce using rule 8 (functions -> function .)
    NAME            reduce using rule 8 (functions -> function .)
    PRINT           reduce using rule 8 (functions -> function .)
    FOR             reduce using rule 8 (functions -> function .)
    WHILE           reduce using rule 8 (functions -> function .)
    IF              reduce using rule 8 (functions -> function .)
    $end            reduce using rule 8 (functions -> function .)


state 6

    (20) main -> linst .
    (21) linst -> linst . statement SEMI
    (23) linst -> linst . controlStruct
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    FUNCTIONDEF     reduce using rule 20 (main -> linst .)
    $end            reduce using rule 20 (main -> linst .)
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    statement                      shift and go to state 21
    controlStruct                  shift and go to state 22
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 7

    (14) function -> FUNCTIONDEF . NAME LPAREN param RPAREN LBRA functionInst RBRA
    (15) function -> FUNCTIONDEF . NAME LPAREN RPAREN LBRA functionInst RBRA

    NAME            shift and go to state 23


state 8

    (29) statement -> NAME . LPAREN paramcall RPAREN
    (30) statement -> NAME . LPAREN RPAREN
    (36) statement -> NAME . EGAL expression

    LPAREN          shift and go to state 24
    EGAL            shift and go to state 25


state 9

    (22) linst -> statement . SEMI

    SEMI            shift and go to state 26


state 10

    (24) linst -> controlStruct .
    (25) linst -> controlStruct . linst
    (21) linst -> . linst statement SEMI
    (22) linst -> . statement SEMI
    (23) linst -> . linst controlStruct
    (24) linst -> . controlStruct
    (25) linst -> . controlStruct linst
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    FUNCTIONDEF     reduce using rule 24 (linst -> controlStruct .)
    $end            reduce using rule 24 (linst -> controlStruct .)
    RBRA            reduce using rule 24 (linst -> controlStruct .)
    RETURN          reduce using rule 24 (linst -> controlStruct .)
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

  ! NAME            [ reduce using rule 24 (linst -> controlStruct .) ]
  ! PRINT           [ reduce using rule 24 (linst -> controlStruct .) ]
  ! FOR             [ reduce using rule 24 (linst -> controlStruct .) ]
  ! WHILE           [ reduce using rule 24 (linst -> controlStruct .) ]
  ! IF              [ reduce using rule 24 (linst -> controlStruct .) ]

    controlStruct                  shift and go to state 10
    linst                          shift and go to state 27
    statement                      shift and go to state 9
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 11

    (31) statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 28


state 12

    (26) controlStruct -> for .

    NAME            reduce using rule 26 (controlStruct -> for .)
    PRINT           reduce using rule 26 (controlStruct -> for .)
    FOR             reduce using rule 26 (controlStruct -> for .)
    WHILE           reduce using rule 26 (controlStruct -> for .)
    IF              reduce using rule 26 (controlStruct -> for .)
    FUNCTIONDEF     reduce using rule 26 (controlStruct -> for .)
    $end            reduce using rule 26 (controlStruct -> for .)
    RBRA            reduce using rule 26 (controlStruct -> for .)
    RETURN          reduce using rule 26 (controlStruct -> for .)


state 13

    (27) controlStruct -> while .

    NAME            reduce using rule 27 (controlStruct -> while .)
    PRINT           reduce using rule 27 (controlStruct -> while .)
    FOR             reduce using rule 27 (controlStruct -> while .)
    WHILE           reduce using rule 27 (controlStruct -> while .)
    IF              reduce using rule 27 (controlStruct -> while .)
    FUNCTIONDEF     reduce using rule 27 (controlStruct -> while .)
    $end            reduce using rule 27 (controlStruct -> while .)
    RBRA            reduce using rule 27 (controlStruct -> while .)
    RETURN          reduce using rule 27 (controlStruct -> while .)


state 14

    (28) controlStruct -> if .

    NAME            reduce using rule 28 (controlStruct -> if .)
    PRINT           reduce using rule 28 (controlStruct -> if .)
    FOR             reduce using rule 28 (controlStruct -> if .)
    WHILE           reduce using rule 28 (controlStruct -> if .)
    IF              reduce using rule 28 (controlStruct -> if .)
    FUNCTIONDEF     reduce using rule 28 (controlStruct -> if .)
    $end            reduce using rule 28 (controlStruct -> if .)
    RBRA            reduce using rule 28 (controlStruct -> if .)
    RETURN          reduce using rule 28 (controlStruct -> if .)


state 15

    (32) for -> FOR . LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA

    LPAREN          shift and go to state 29


state 16

    (33) while -> WHILE . LPAREN expression RPAREN LBRA linst RBRA

    LPAREN          shift and go to state 30


state 17

    (34) if -> IF . LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> IF . LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    LPAREN          shift and go to state 31


state 18

    (2) prog -> functions main . functions
    (3) prog -> functions main .
    (7) functions -> . functions function
    (8) functions -> . function
    (14) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA
    (15) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA

    $end            reduce using rule 3 (prog -> functions main .)
    FUNCTIONDEF     shift and go to state 7

    functions                      shift and go to state 32
    function                       shift and go to state 5

state 19

    (7) functions -> functions function .

    FUNCTIONDEF     reduce using rule 7 (functions -> functions function .)
    NAME            reduce using rule 7 (functions -> functions function .)
    PRINT           reduce using rule 7 (functions -> functions function .)
    FOR             reduce using rule 7 (functions -> functions function .)
    WHILE           reduce using rule 7 (functions -> functions function .)
    IF              reduce using rule 7 (functions -> functions function .)
    $end            reduce using rule 7 (functions -> functions function .)


state 20

    (4) prog -> main functions .
    (7) functions -> functions . function
    (14) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA
    (15) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA

    $end            reduce using rule 4 (prog -> main functions .)
    FUNCTIONDEF     shift and go to state 7

    function                       shift and go to state 19

state 21

    (21) linst -> linst statement . SEMI

    SEMI            shift and go to state 33


state 22

    (23) linst -> linst controlStruct .

    NAME            reduce using rule 23 (linst -> linst controlStruct .)
    PRINT           reduce using rule 23 (linst -> linst controlStruct .)
    FOR             reduce using rule 23 (linst -> linst controlStruct .)
    WHILE           reduce using rule 23 (linst -> linst controlStruct .)
    IF              reduce using rule 23 (linst -> linst controlStruct .)
    FUNCTIONDEF     reduce using rule 23 (linst -> linst controlStruct .)
    $end            reduce using rule 23 (linst -> linst controlStruct .)
    RBRA            reduce using rule 23 (linst -> linst controlStruct .)
    RETURN          reduce using rule 23 (linst -> linst controlStruct .)


state 23

    (14) function -> FUNCTIONDEF NAME . LPAREN param RPAREN LBRA functionInst RBRA
    (15) function -> FUNCTIONDEF NAME . LPAREN RPAREN LBRA functionInst RBRA

    LPAREN          shift and go to state 34


state 24

    (29) statement -> NAME LPAREN . paramcall RPAREN
    (30) statement -> NAME LPAREN . RPAREN
    (18) paramcall -> . paramcall COMMA expression
    (19) paramcall -> . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    RPAREN          shift and go to state 38
    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    paramcall                      shift and go to state 37
    expression                     shift and go to state 39

state 25

    (36) statement -> NAME EGAL . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 41

state 26

    (22) linst -> statement SEMI .

    NAME            reduce using rule 22 (linst -> statement SEMI .)
    PRINT           reduce using rule 22 (linst -> statement SEMI .)
    FOR             reduce using rule 22 (linst -> statement SEMI .)
    WHILE           reduce using rule 22 (linst -> statement SEMI .)
    IF              reduce using rule 22 (linst -> statement SEMI .)
    FUNCTIONDEF     reduce using rule 22 (linst -> statement SEMI .)
    $end            reduce using rule 22 (linst -> statement SEMI .)
    RBRA            reduce using rule 22 (linst -> statement SEMI .)
    RETURN          reduce using rule 22 (linst -> statement SEMI .)


state 27

    (25) linst -> controlStruct linst .
    (21) linst -> linst . statement SEMI
    (23) linst -> linst . controlStruct
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    FUNCTIONDEF     reduce using rule 25 (linst -> controlStruct linst .)
    $end            reduce using rule 25 (linst -> controlStruct linst .)
    RBRA            reduce using rule 25 (linst -> controlStruct linst .)
    RETURN          reduce using rule 25 (linst -> controlStruct linst .)
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

  ! NAME            [ reduce using rule 25 (linst -> controlStruct linst .) ]
  ! PRINT           [ reduce using rule 25 (linst -> controlStruct linst .) ]
  ! FOR             [ reduce using rule 25 (linst -> controlStruct linst .) ]
  ! WHILE           [ reduce using rule 25 (linst -> controlStruct linst .) ]
  ! IF              [ reduce using rule 25 (linst -> controlStruct linst .) ]

    controlStruct                  shift and go to state 22
    statement                      shift and go to state 21
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 28

    (31) statement -> PRINT LPAREN . expression RPAREN
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 42

state 29

    (32) for -> FOR LPAREN . statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression

    NAME            shift and go to state 8
    PRINT           shift and go to state 11

    statement                      shift and go to state 43

state 30

    (33) while -> WHILE LPAREN . expression RPAREN LBRA linst RBRA
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 44

state 31

    (34) if -> IF LPAREN . expression RPAREN LBRA linst RBRA
    (35) if -> IF LPAREN . expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 45

state 32

    (2) prog -> functions main functions .
    (7) functions -> functions . function
    (14) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA
    (15) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA

    $end            reduce using rule 2 (prog -> functions main functions .)
    FUNCTIONDEF     shift and go to state 7

    function                       shift and go to state 19

state 33

    (21) linst -> linst statement SEMI .

    NAME            reduce using rule 21 (linst -> linst statement SEMI .)
    PRINT           reduce using rule 21 (linst -> linst statement SEMI .)
    FOR             reduce using rule 21 (linst -> linst statement SEMI .)
    WHILE           reduce using rule 21 (linst -> linst statement SEMI .)
    IF              reduce using rule 21 (linst -> linst statement SEMI .)
    FUNCTIONDEF     reduce using rule 21 (linst -> linst statement SEMI .)
    $end            reduce using rule 21 (linst -> linst statement SEMI .)
    RBRA            reduce using rule 21 (linst -> linst statement SEMI .)
    RETURN          reduce using rule 21 (linst -> linst statement SEMI .)


state 34

    (14) function -> FUNCTIONDEF NAME LPAREN . param RPAREN LBRA functionInst RBRA
    (15) function -> FUNCTIONDEF NAME LPAREN . RPAREN LBRA functionInst RBRA
    (16) param -> . param COMMA NAME
    (17) param -> . NAME

    RPAREN          shift and go to state 48
    NAME            shift and go to state 46

    param                          shift and go to state 47

state 35

    (50) expression -> NAME .
    (51) expression -> NAME . LPAREN paramcall RPAREN

    INF             reduce using rule 50 (expression -> NAME .)
    INFEG           reduce using rule 50 (expression -> NAME .)
    EGALEGAL        reduce using rule 50 (expression -> NAME .)
    AND             reduce using rule 50 (expression -> NAME .)
    OR              reduce using rule 50 (expression -> NAME .)
    PLUS            reduce using rule 50 (expression -> NAME .)
    TIMES           reduce using rule 50 (expression -> NAME .)
    MINUS           reduce using rule 50 (expression -> NAME .)
    DIVIDE          reduce using rule 50 (expression -> NAME .)
    SUP             reduce using rule 50 (expression -> NAME .)
    SUPEG           reduce using rule 50 (expression -> NAME .)
    RPAREN          reduce using rule 50 (expression -> NAME .)
    COMMA           reduce using rule 50 (expression -> NAME .)
    SEMI            reduce using rule 50 (expression -> NAME .)
    LPAREN          shift and go to state 49


state 36

    (48) expression -> LPAREN . expression RPAREN
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 50

state 37

    (29) statement -> NAME LPAREN paramcall . RPAREN
    (18) paramcall -> paramcall . COMMA expression

    RPAREN          shift and go to state 51
    COMMA           shift and go to state 52


state 38

    (30) statement -> NAME LPAREN RPAREN .

    SEMI            reduce using rule 30 (statement -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 30 (statement -> NAME LPAREN RPAREN .)


state 39

    (19) paramcall -> expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    RPAREN          reduce using rule 19 (paramcall -> expression .)
    COMMA           reduce using rule 19 (paramcall -> expression .)
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62
    SUPEG           shift and go to state 63


state 40

    (49) expression -> NUMBER .

    INF             reduce using rule 49 (expression -> NUMBER .)
    INFEG           reduce using rule 49 (expression -> NUMBER .)
    EGALEGAL        reduce using rule 49 (expression -> NUMBER .)
    AND             reduce using rule 49 (expression -> NUMBER .)
    OR              reduce using rule 49 (expression -> NUMBER .)
    PLUS            reduce using rule 49 (expression -> NUMBER .)
    TIMES           reduce using rule 49 (expression -> NUMBER .)
    MINUS           reduce using rule 49 (expression -> NUMBER .)
    DIVIDE          reduce using rule 49 (expression -> NUMBER .)
    SUP             reduce using rule 49 (expression -> NUMBER .)
    SUPEG           reduce using rule 49 (expression -> NUMBER .)
    RPAREN          reduce using rule 49 (expression -> NUMBER .)
    COMMA           reduce using rule 49 (expression -> NUMBER .)
    SEMI            reduce using rule 49 (expression -> NUMBER .)


state 41

    (36) statement -> NAME EGAL expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    SEMI            reduce using rule 36 (statement -> NAME EGAL expression .)
    RPAREN          reduce using rule 36 (statement -> NAME EGAL expression .)
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62
    SUPEG           shift and go to state 63


state 42

    (31) statement -> PRINT LPAREN expression . RPAREN
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    RPAREN          shift and go to state 64
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62
    SUPEG           shift and go to state 63


state 43

    (32) for -> FOR LPAREN statement . SEMI expression SEMI statement RPAREN LBRA linst RBRA

    SEMI            shift and go to state 65


state 44

    (33) while -> WHILE LPAREN expression . RPAREN LBRA linst RBRA
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    RPAREN          shift and go to state 66
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62
    SUPEG           shift and go to state 63


state 45

    (34) if -> IF LPAREN expression . RPAREN LBRA linst RBRA
    (35) if -> IF LPAREN expression . RPAREN LBRA linst RBRA ELSE LBRA linst RBRA
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    RPAREN          shift and go to state 67
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62
    SUPEG           shift and go to state 63


state 46

    (17) param -> NAME .

    RPAREN          reduce using rule 17 (param -> NAME .)
    COMMA           reduce using rule 17 (param -> NAME .)


state 47

    (14) function -> FUNCTIONDEF NAME LPAREN param . RPAREN LBRA functionInst RBRA
    (16) param -> param . COMMA NAME

    RPAREN          shift and go to state 68
    COMMA           shift and go to state 69


state 48

    (15) function -> FUNCTIONDEF NAME LPAREN RPAREN . LBRA functionInst RBRA

    LBRA            shift and go to state 70


state 49

    (51) expression -> NAME LPAREN . paramcall RPAREN
    (18) paramcall -> . paramcall COMMA expression
    (19) paramcall -> . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    paramcall                      shift and go to state 71
    expression                     shift and go to state 39

state 50

    (48) expression -> LPAREN expression . RPAREN
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    RPAREN          shift and go to state 72
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62
    SUPEG           shift and go to state 63


state 51

    (29) statement -> NAME LPAREN paramcall RPAREN .

    SEMI            reduce using rule 29 (statement -> NAME LPAREN paramcall RPAREN .)
    RPAREN          reduce using rule 29 (statement -> NAME LPAREN paramcall RPAREN .)


state 52

    (18) paramcall -> paramcall COMMA . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 73

state 53

    (37) expression -> expression INF . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 74

state 54

    (38) expression -> expression INFEG . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 75

state 55

    (39) expression -> expression EGALEGAL . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 76

state 56

    (40) expression -> expression AND . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 77

state 57

    (41) expression -> expression OR . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 78

state 58

    (42) expression -> expression PLUS . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 79

state 59

    (43) expression -> expression TIMES . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 80

state 60

    (44) expression -> expression MINUS . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 81

state 61

    (45) expression -> expression DIVIDE . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 82

state 62

    (46) expression -> expression SUP . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 83

state 63

    (47) expression -> expression SUPEG . expression
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 84

state 64

    (31) statement -> PRINT LPAREN expression RPAREN .

    SEMI            reduce using rule 31 (statement -> PRINT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 31 (statement -> PRINT LPAREN expression RPAREN .)


state 65

    (32) for -> FOR LPAREN statement SEMI . expression SEMI statement RPAREN LBRA linst RBRA
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 85

state 66

    (33) while -> WHILE LPAREN expression RPAREN . LBRA linst RBRA

    LBRA            shift and go to state 86


state 67

    (34) if -> IF LPAREN expression RPAREN . LBRA linst RBRA
    (35) if -> IF LPAREN expression RPAREN . LBRA linst RBRA ELSE LBRA linst RBRA

    LBRA            shift and go to state 87


state 68

    (14) function -> FUNCTIONDEF NAME LPAREN param RPAREN . LBRA functionInst RBRA

    LBRA            shift and go to state 88


state 69

    (16) param -> param COMMA . NAME

    NAME            shift and go to state 89


state 70

    (15) function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA . functionInst RBRA
    (11) functionInst -> . functionInst return
    (12) functionInst -> . return
    (13) functionInst -> . linst
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (21) linst -> . linst statement SEMI
    (22) linst -> . statement SEMI
    (23) linst -> . linst controlStruct
    (24) linst -> . controlStruct
    (25) linst -> . controlStruct linst
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RETURN          shift and go to state 93
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    functionInst                   shift and go to state 90
    return                         shift and go to state 91
    linst                          shift and go to state 92
    statement                      shift and go to state 9
    controlStruct                  shift and go to state 10
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 71

    (51) expression -> NAME LPAREN paramcall . RPAREN
    (18) paramcall -> paramcall . COMMA expression

    RPAREN          shift and go to state 94
    COMMA           shift and go to state 52


state 72

    (48) expression -> LPAREN expression RPAREN .

    INF             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    INFEG           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EGALEGAL        reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    SUPEG           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 48 (expression -> LPAREN expression RPAREN .)


state 73

    (18) paramcall -> paramcall COMMA expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    RPAREN          reduce using rule 18 (paramcall -> paramcall COMMA expression .)
    COMMA           reduce using rule 18 (paramcall -> paramcall COMMA expression .)
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62
    SUPEG           shift and go to state 63


state 74

    (37) expression -> expression INF expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    INF             reduce using rule 37 (expression -> expression INF expression .)
    INFEG           reduce using rule 37 (expression -> expression INF expression .)
    EGALEGAL        reduce using rule 37 (expression -> expression INF expression .)
    AND             reduce using rule 37 (expression -> expression INF expression .)
    OR              reduce using rule 37 (expression -> expression INF expression .)
    SUP             reduce using rule 37 (expression -> expression INF expression .)
    SUPEG           reduce using rule 37 (expression -> expression INF expression .)
    RPAREN          reduce using rule 37 (expression -> expression INF expression .)
    COMMA           reduce using rule 37 (expression -> expression INF expression .)
    SEMI            reduce using rule 37 (expression -> expression INF expression .)
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61

  ! PLUS            [ reduce using rule 37 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression INF expression .) ]
  ! INF             [ shift and go to state 53 ]
  ! INFEG           [ shift and go to state 54 ]
  ! EGALEGAL        [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! SUP             [ shift and go to state 62 ]
  ! SUPEG           [ shift and go to state 63 ]


state 75

    (38) expression -> expression INFEG expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    INF             reduce using rule 38 (expression -> expression INFEG expression .)
    INFEG           reduce using rule 38 (expression -> expression INFEG expression .)
    EGALEGAL        reduce using rule 38 (expression -> expression INFEG expression .)
    AND             reduce using rule 38 (expression -> expression INFEG expression .)
    OR              reduce using rule 38 (expression -> expression INFEG expression .)
    SUP             reduce using rule 38 (expression -> expression INFEG expression .)
    SUPEG           reduce using rule 38 (expression -> expression INFEG expression .)
    RPAREN          reduce using rule 38 (expression -> expression INFEG expression .)
    COMMA           reduce using rule 38 (expression -> expression INFEG expression .)
    SEMI            reduce using rule 38 (expression -> expression INFEG expression .)
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61

  ! PLUS            [ reduce using rule 38 (expression -> expression INFEG expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression INFEG expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression INFEG expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression INFEG expression .) ]
  ! INF             [ shift and go to state 53 ]
  ! INFEG           [ shift and go to state 54 ]
  ! EGALEGAL        [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! SUP             [ shift and go to state 62 ]
  ! SUPEG           [ shift and go to state 63 ]


state 76

    (39) expression -> expression EGALEGAL expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    INF             reduce using rule 39 (expression -> expression EGALEGAL expression .)
    INFEG           reduce using rule 39 (expression -> expression EGALEGAL expression .)
    EGALEGAL        reduce using rule 39 (expression -> expression EGALEGAL expression .)
    AND             reduce using rule 39 (expression -> expression EGALEGAL expression .)
    OR              reduce using rule 39 (expression -> expression EGALEGAL expression .)
    SUP             reduce using rule 39 (expression -> expression EGALEGAL expression .)
    SUPEG           reduce using rule 39 (expression -> expression EGALEGAL expression .)
    RPAREN          reduce using rule 39 (expression -> expression EGALEGAL expression .)
    COMMA           reduce using rule 39 (expression -> expression EGALEGAL expression .)
    SEMI            reduce using rule 39 (expression -> expression EGALEGAL expression .)
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61

  ! PLUS            [ reduce using rule 39 (expression -> expression EGALEGAL expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression EGALEGAL expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression EGALEGAL expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression EGALEGAL expression .) ]
  ! INF             [ shift and go to state 53 ]
  ! INFEG           [ shift and go to state 54 ]
  ! EGALEGAL        [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! SUP             [ shift and go to state 62 ]
  ! SUPEG           [ shift and go to state 63 ]


state 77

    (40) expression -> expression AND expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    AND             reduce using rule 40 (expression -> expression AND expression .)
    OR              reduce using rule 40 (expression -> expression AND expression .)
    SUPEG           reduce using rule 40 (expression -> expression AND expression .)
    RPAREN          reduce using rule 40 (expression -> expression AND expression .)
    COMMA           reduce using rule 40 (expression -> expression AND expression .)
    SEMI            reduce using rule 40 (expression -> expression AND expression .)
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62

  ! INF             [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! INFEG           [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! EGALEGAL        [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! SUPEG           [ shift and go to state 63 ]


state 78

    (41) expression -> expression OR expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    OR              reduce using rule 41 (expression -> expression OR expression .)
    SUPEG           reduce using rule 41 (expression -> expression OR expression .)
    RPAREN          reduce using rule 41 (expression -> expression OR expression .)
    COMMA           reduce using rule 41 (expression -> expression OR expression .)
    SEMI            reduce using rule 41 (expression -> expression OR expression .)
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62

  ! INF             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! INFEG           [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! EGALEGAL        [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 57 ]
  ! SUPEG           [ shift and go to state 63 ]


state 79

    (42) expression -> expression PLUS expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    INF             reduce using rule 42 (expression -> expression PLUS expression .)
    INFEG           reduce using rule 42 (expression -> expression PLUS expression .)
    EGALEGAL        reduce using rule 42 (expression -> expression PLUS expression .)
    AND             reduce using rule 42 (expression -> expression PLUS expression .)
    OR              reduce using rule 42 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 42 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 42 (expression -> expression PLUS expression .)
    SUP             reduce using rule 42 (expression -> expression PLUS expression .)
    SUPEG           reduce using rule 42 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 42 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 42 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 42 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 61

  ! TIMES           [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! INF             [ shift and go to state 53 ]
  ! INFEG           [ shift and go to state 54 ]
  ! EGALEGAL        [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! PLUS            [ shift and go to state 58 ]
  ! MINUS           [ shift and go to state 60 ]
  ! SUP             [ shift and go to state 62 ]
  ! SUPEG           [ shift and go to state 63 ]


state 80

    (43) expression -> expression TIMES expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    INF             reduce using rule 43 (expression -> expression TIMES expression .)
    INFEG           reduce using rule 43 (expression -> expression TIMES expression .)
    EGALEGAL        reduce using rule 43 (expression -> expression TIMES expression .)
    AND             reduce using rule 43 (expression -> expression TIMES expression .)
    OR              reduce using rule 43 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 43 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 43 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 43 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 43 (expression -> expression TIMES expression .)
    SUP             reduce using rule 43 (expression -> expression TIMES expression .)
    SUPEG           reduce using rule 43 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 43 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 43 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 43 (expression -> expression TIMES expression .)

  ! INF             [ shift and go to state 53 ]
  ! INFEG           [ shift and go to state 54 ]
  ! EGALEGAL        [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! PLUS            [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! DIVIDE          [ shift and go to state 61 ]
  ! SUP             [ shift and go to state 62 ]
  ! SUPEG           [ shift and go to state 63 ]


state 81

    (44) expression -> expression MINUS expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    INF             reduce using rule 44 (expression -> expression MINUS expression .)
    INFEG           reduce using rule 44 (expression -> expression MINUS expression .)
    EGALEGAL        reduce using rule 44 (expression -> expression MINUS expression .)
    AND             reduce using rule 44 (expression -> expression MINUS expression .)
    OR              reduce using rule 44 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 44 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 44 (expression -> expression MINUS expression .)
    SUP             reduce using rule 44 (expression -> expression MINUS expression .)
    SUPEG           reduce using rule 44 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 44 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 44 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 44 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 61

  ! TIMES           [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! INF             [ shift and go to state 53 ]
  ! INFEG           [ shift and go to state 54 ]
  ! EGALEGAL        [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! PLUS            [ shift and go to state 58 ]
  ! MINUS           [ shift and go to state 60 ]
  ! SUP             [ shift and go to state 62 ]
  ! SUPEG           [ shift and go to state 63 ]


state 82

    (45) expression -> expression DIVIDE expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    INF             reduce using rule 45 (expression -> expression DIVIDE expression .)
    INFEG           reduce using rule 45 (expression -> expression DIVIDE expression .)
    EGALEGAL        reduce using rule 45 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 45 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 45 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 45 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 45 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 45 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 45 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 45 (expression -> expression DIVIDE expression .)
    SUPEG           reduce using rule 45 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 45 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 45 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 45 (expression -> expression DIVIDE expression .)

  ! INF             [ shift and go to state 53 ]
  ! INFEG           [ shift and go to state 54 ]
  ! EGALEGAL        [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! PLUS            [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! DIVIDE          [ shift and go to state 61 ]
  ! SUP             [ shift and go to state 62 ]
  ! SUPEG           [ shift and go to state 63 ]


state 83

    (46) expression -> expression SUP expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    INF             reduce using rule 46 (expression -> expression SUP expression .)
    INFEG           reduce using rule 46 (expression -> expression SUP expression .)
    EGALEGAL        reduce using rule 46 (expression -> expression SUP expression .)
    AND             reduce using rule 46 (expression -> expression SUP expression .)
    OR              reduce using rule 46 (expression -> expression SUP expression .)
    SUP             reduce using rule 46 (expression -> expression SUP expression .)
    SUPEG           reduce using rule 46 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 46 (expression -> expression SUP expression .)
    COMMA           reduce using rule 46 (expression -> expression SUP expression .)
    SEMI            reduce using rule 46 (expression -> expression SUP expression .)
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61

  ! PLUS            [ reduce using rule 46 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression SUP expression .) ]
  ! INF             [ shift and go to state 53 ]
  ! INFEG           [ shift and go to state 54 ]
  ! EGALEGAL        [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! SUP             [ shift and go to state 62 ]
  ! SUPEG           [ shift and go to state 63 ]


state 84

    (47) expression -> expression SUPEG expression .
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for INFEG resolved as shift
  ! shift/reduce conflict for EGALEGAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for SUPEG resolved as shift
    RPAREN          reduce using rule 47 (expression -> expression SUPEG expression .)
    COMMA           reduce using rule 47 (expression -> expression SUPEG expression .)
    SEMI            reduce using rule 47 (expression -> expression SUPEG expression .)
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62
    SUPEG           shift and go to state 63

  ! INF             [ reduce using rule 47 (expression -> expression SUPEG expression .) ]
  ! INFEG           [ reduce using rule 47 (expression -> expression SUPEG expression .) ]
  ! EGALEGAL        [ reduce using rule 47 (expression -> expression SUPEG expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression SUPEG expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression SUPEG expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression SUPEG expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression SUPEG expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression SUPEG expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression SUPEG expression .) ]
  ! SUP             [ reduce using rule 47 (expression -> expression SUPEG expression .) ]
  ! SUPEG           [ reduce using rule 47 (expression -> expression SUPEG expression .) ]


state 85

    (32) for -> FOR LPAREN statement SEMI expression . SEMI statement RPAREN LBRA linst RBRA
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    SEMI            shift and go to state 95
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62
    SUPEG           shift and go to state 63


state 86

    (33) while -> WHILE LPAREN expression RPAREN LBRA . linst RBRA
    (21) linst -> . linst statement SEMI
    (22) linst -> . statement SEMI
    (23) linst -> . linst controlStruct
    (24) linst -> . controlStruct
    (25) linst -> . controlStruct linst
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    linst                          shift and go to state 96
    statement                      shift and go to state 9
    controlStruct                  shift and go to state 10
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 87

    (34) if -> IF LPAREN expression RPAREN LBRA . linst RBRA
    (35) if -> IF LPAREN expression RPAREN LBRA . linst RBRA ELSE LBRA linst RBRA
    (21) linst -> . linst statement SEMI
    (22) linst -> . statement SEMI
    (23) linst -> . linst controlStruct
    (24) linst -> . controlStruct
    (25) linst -> . controlStruct linst
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    linst                          shift and go to state 97
    statement                      shift and go to state 9
    controlStruct                  shift and go to state 10
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 88

    (14) function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA . functionInst RBRA
    (11) functionInst -> . functionInst return
    (12) functionInst -> . return
    (13) functionInst -> . linst
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (21) linst -> . linst statement SEMI
    (22) linst -> . statement SEMI
    (23) linst -> . linst controlStruct
    (24) linst -> . controlStruct
    (25) linst -> . controlStruct linst
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RETURN          shift and go to state 93
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    functionInst                   shift and go to state 98
    return                         shift and go to state 91
    linst                          shift and go to state 92
    statement                      shift and go to state 9
    controlStruct                  shift and go to state 10
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 89

    (16) param -> param COMMA NAME .

    RPAREN          reduce using rule 16 (param -> param COMMA NAME .)
    COMMA           reduce using rule 16 (param -> param COMMA NAME .)


state 90

    (15) function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst . RBRA
    (11) functionInst -> functionInst . return
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI

    RBRA            shift and go to state 99
    RETURN          shift and go to state 93

    return                         shift and go to state 100

state 91

    (12) functionInst -> return .

    RBRA            reduce using rule 12 (functionInst -> return .)
    RETURN          reduce using rule 12 (functionInst -> return .)


state 92

    (13) functionInst -> linst .
    (21) linst -> linst . statement SEMI
    (23) linst -> linst . controlStruct
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            reduce using rule 13 (functionInst -> linst .)
    RETURN          reduce using rule 13 (functionInst -> linst .)
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    statement                      shift and go to state 21
    controlStruct                  shift and go to state 22
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 93

    (9) return -> RETURN . expression SEMI
    (10) return -> RETURN . SEMI
    (37) expression -> . expression INF expression
    (38) expression -> . expression INFEG expression
    (39) expression -> . expression EGALEGAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression SUP expression
    (47) expression -> . expression SUPEG expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . NAME LPAREN paramcall RPAREN

    SEMI            shift and go to state 102
    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 40
    NAME            shift and go to state 35

    expression                     shift and go to state 101

state 94

    (51) expression -> NAME LPAREN paramcall RPAREN .

    INF             reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    INFEG           reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    EGALEGAL        reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    AND             reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    OR              reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    PLUS            reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    TIMES           reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    MINUS           reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    DIVIDE          reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    SUP             reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    SUPEG           reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    RPAREN          reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    COMMA           reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)
    SEMI            reduce using rule 51 (expression -> NAME LPAREN paramcall RPAREN .)


state 95

    (32) for -> FOR LPAREN statement SEMI expression SEMI . statement RPAREN LBRA linst RBRA
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression

    NAME            shift and go to state 8
    PRINT           shift and go to state 11

    statement                      shift and go to state 103

state 96

    (33) while -> WHILE LPAREN expression RPAREN LBRA linst . RBRA
    (21) linst -> linst . statement SEMI
    (23) linst -> linst . controlStruct
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            shift and go to state 104
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    statement                      shift and go to state 21
    controlStruct                  shift and go to state 22
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 97

    (34) if -> IF LPAREN expression RPAREN LBRA linst . RBRA
    (35) if -> IF LPAREN expression RPAREN LBRA linst . RBRA ELSE LBRA linst RBRA
    (21) linst -> linst . statement SEMI
    (23) linst -> linst . controlStruct
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            shift and go to state 105
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    statement                      shift and go to state 21
    controlStruct                  shift and go to state 22
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 98

    (14) function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst . RBRA
    (11) functionInst -> functionInst . return
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI

    RBRA            shift and go to state 106
    RETURN          shift and go to state 93

    return                         shift and go to state 100

state 99

    (15) function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA .

    FUNCTIONDEF     reduce using rule 15 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA .)
    NAME            reduce using rule 15 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA .)
    PRINT           reduce using rule 15 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA .)
    FOR             reduce using rule 15 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA .)
    WHILE           reduce using rule 15 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA .)
    IF              reduce using rule 15 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA .)
    $end            reduce using rule 15 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA functionInst RBRA .)


state 100

    (11) functionInst -> functionInst return .

    RBRA            reduce using rule 11 (functionInst -> functionInst return .)
    RETURN          reduce using rule 11 (functionInst -> functionInst return .)


state 101

    (9) return -> RETURN expression . SEMI
    (37) expression -> expression . INF expression
    (38) expression -> expression . INFEG expression
    (39) expression -> expression . EGALEGAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . SUP expression
    (47) expression -> expression . SUPEG expression

    SEMI            shift and go to state 107
    INF             shift and go to state 53
    INFEG           shift and go to state 54
    EGALEGAL        shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    MINUS           shift and go to state 60
    DIVIDE          shift and go to state 61
    SUP             shift and go to state 62
    SUPEG           shift and go to state 63


state 102

    (10) return -> RETURN SEMI .

    RBRA            reduce using rule 10 (return -> RETURN SEMI .)
    RETURN          reduce using rule 10 (return -> RETURN SEMI .)


state 103

    (32) for -> FOR LPAREN statement SEMI expression SEMI statement . RPAREN LBRA linst RBRA

    RPAREN          shift and go to state 108


state 104

    (33) while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .

    NAME            reduce using rule 33 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    PRINT           reduce using rule 33 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    FOR             reduce using rule 33 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    WHILE           reduce using rule 33 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    IF              reduce using rule 33 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    FUNCTIONDEF     reduce using rule 33 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    $end            reduce using rule 33 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    RBRA            reduce using rule 33 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    RETURN          reduce using rule 33 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)


state 105

    (34) if -> IF LPAREN expression RPAREN LBRA linst RBRA .
    (35) if -> IF LPAREN expression RPAREN LBRA linst RBRA . ELSE LBRA linst RBRA

    NAME            reduce using rule 34 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    PRINT           reduce using rule 34 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    FOR             reduce using rule 34 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    WHILE           reduce using rule 34 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    IF              reduce using rule 34 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    FUNCTIONDEF     reduce using rule 34 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    $end            reduce using rule 34 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    RBRA            reduce using rule 34 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    RETURN          reduce using rule 34 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    ELSE            shift and go to state 109


state 106

    (14) function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA .

    FUNCTIONDEF     reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA .)
    NAME            reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA .)
    PRINT           reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA .)
    FOR             reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA .)
    WHILE           reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA .)
    IF              reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA .)
    $end            reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA functionInst RBRA .)


state 107

    (9) return -> RETURN expression SEMI .

    RBRA            reduce using rule 9 (return -> RETURN expression SEMI .)
    RETURN          reduce using rule 9 (return -> RETURN expression SEMI .)


state 108

    (32) for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN . LBRA linst RBRA

    LBRA            shift and go to state 110


state 109

    (35) if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE . LBRA linst RBRA

    LBRA            shift and go to state 111


state 110

    (32) for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA . linst RBRA
    (21) linst -> . linst statement SEMI
    (22) linst -> . statement SEMI
    (23) linst -> . linst controlStruct
    (24) linst -> . controlStruct
    (25) linst -> . controlStruct linst
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    statement                      shift and go to state 9
    linst                          shift and go to state 112
    controlStruct                  shift and go to state 10
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 111

    (35) if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA . linst RBRA
    (21) linst -> . linst statement SEMI
    (22) linst -> . statement SEMI
    (23) linst -> . linst controlStruct
    (24) linst -> . controlStruct
    (25) linst -> . controlStruct linst
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    linst                          shift and go to state 113
    statement                      shift and go to state 9
    controlStruct                  shift and go to state 10
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 112

    (32) for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst . RBRA
    (21) linst -> linst . statement SEMI
    (23) linst -> linst . controlStruct
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            shift and go to state 114
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    statement                      shift and go to state 21
    controlStruct                  shift and go to state 22
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 113

    (35) if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst . RBRA
    (21) linst -> linst . statement SEMI
    (23) linst -> linst . controlStruct
    (29) statement -> . NAME LPAREN paramcall RPAREN
    (30) statement -> . NAME LPAREN RPAREN
    (31) statement -> . PRINT LPAREN expression RPAREN
    (36) statement -> . NAME EGAL expression
    (26) controlStruct -> . for
    (27) controlStruct -> . while
    (28) controlStruct -> . if
    (32) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (33) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (34) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (35) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            shift and go to state 115
    NAME            shift and go to state 8
    PRINT           shift and go to state 11
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17

    statement                      shift and go to state 21
    controlStruct                  shift and go to state 22
    for                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14

state 114

    (32) for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .

    NAME            reduce using rule 32 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    PRINT           reduce using rule 32 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    FOR             reduce using rule 32 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    WHILE           reduce using rule 32 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    IF              reduce using rule 32 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    FUNCTIONDEF     reduce using rule 32 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    $end            reduce using rule 32 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    RBRA            reduce using rule 32 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    RETURN          reduce using rule 32 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)


state 115

    (35) if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .

    NAME            reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    PRINT           reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    FOR             reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    WHILE           reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    IF              reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    FUNCTIONDEF     reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    $end            reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    RBRA            reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    RETURN          reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NAME in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for NAME in state 27 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 27 resolved as shift
WARNING: shift/reduce conflict for FOR in state 27 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 27 resolved as shift
WARNING: shift/reduce conflict for IF in state 27 resolved as shift
WARNING: shift/reduce conflict for INF in state 84 resolved as shift
WARNING: shift/reduce conflict for INFEG in state 84 resolved as shift
WARNING: shift/reduce conflict for EGALEGAL in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 84 resolved as shift
WARNING: shift/reduce conflict for SUP in state 84 resolved as shift
WARNING: shift/reduce conflict for SUPEG in state 84 resolved as shift
