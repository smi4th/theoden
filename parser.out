Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> prog
Rule 2     prog -> functions main functions
Rule 3     prog -> functions main
Rule 4     prog -> main functions
Rule 5     prog -> main
Rule 6     prog -> functions
Rule 7     functions -> functions function
Rule 8     functions -> function
Rule 9     return -> RETURN expression SEMI
Rule 10    return -> RETURN SEMI
Rule 11    expression -> RETURN expression
Rule 12    expression -> RETURN
Rule 13    function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA
Rule 14    function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA
Rule 15    param -> param COMMA NAME
Rule 16    param -> NAME
Rule 17    paramcall -> paramcall COMMA expression
Rule 18    paramcall -> expression
Rule 19    main -> linst
Rule 20    linst -> linst statement SEMI
Rule 21    linst -> statement SEMI
Rule 22    linst -> linst controlStruct
Rule 23    linst -> controlStruct
Rule 24    linst -> controlStruct linst
Rule 25    linst -> linst expression SEMI
Rule 26    linst -> expression SEMI
Rule 27    linst -> linst return
Rule 28    linst -> return
Rule 29    controlStruct -> for
Rule 30    controlStruct -> while
Rule 31    controlStruct -> if
Rule 32    expression -> NAME LPAREN paramcall RPAREN
Rule 33    expression -> NAME LPAREN RPAREN
Rule 34    statement -> PRINT LPAREN paramcall RPAREN
Rule 35    for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
Rule 36    while -> WHILE LPAREN expression RPAREN LBRA linst RBRA
Rule 37    if -> IF LPAREN expression RPAREN LBRA linst RBRA
Rule 38    if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA
Rule 39    statement -> NAME EGAL expression
Rule 40    expression -> expression INF expression
Rule 41    expression -> expression INFEG expression
Rule 42    expression -> expression EGALEGAL expression
Rule 43    expression -> expression AND expression
Rule 44    expression -> expression OR expression
Rule 45    expression -> expression PLUS expression
Rule 46    expression -> expression TIMES expression
Rule 47    expression -> expression MINUS expression
Rule 48    expression -> expression DIVIDE expression
Rule 49    expression -> expression MODULO expression
Rule 50    expression -> expression SUP expression
Rule 51    expression -> expression SUPEG expression
Rule 52    expression -> expression INC
Rule 53    expression -> expression DEC
Rule 54    expression -> LPAREN expression RPAREN
Rule 55    expression -> NUMBER
Rule 56    expression -> NAME

Terminals, with rules where they appear

AND                  : 43
COMMA                : 15 17
DEC                  : 53
DIVIDE               : 48
EGAL                 : 39
EGALEGAL             : 42
ELSE                 : 38
FOR                  : 35
FUNCTIONDEF          : 13 14
IF                   : 37 38
INC                  : 52
INF                  : 40
INFEG                : 41
LBRA                 : 13 14 35 36 37 38 38
LPAREN               : 13 14 32 33 34 35 36 37 38 54
MINUS                : 47
MODULO               : 49
NAME                 : 13 14 15 16 32 33 39 56
NUMBER               : 55
OR                   : 44
PLUS                 : 45
PRINT                : 34
RBRA                 : 13 14 35 36 37 38 38
RETURN               : 9 10 11 12
RPAREN               : 13 14 32 33 34 35 36 37 38 54
SEMI                 : 9 10 20 21 25 26 35 35
SUP                  : 50
SUPEG                : 51
TIMES                : 46
WHILE                : 36
error                : 

Nonterminals, with rules where they appear

controlStruct        : 22 23 24
expression           : 9 11 17 18 25 26 35 36 37 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 53 54
for                  : 29
function             : 7 8
functions            : 2 2 3 4 6 7
if                   : 31
linst                : 13 14 19 20 22 24 25 27 35 36 37 38 38
main                 : 2 3 4 5
param                : 13 15
paramcall            : 17 32 34
prog                 : 1
return               : 27 28
start                : 0
statement            : 20 21 35 35
while                : 30

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . prog
    (2) prog -> . functions main functions
    (3) prog -> . functions main
    (4) prog -> . main functions
    (5) prog -> . main
    (6) prog -> . functions
    (7) functions -> . functions function
    (8) functions -> . function
    (19) main -> . linst
    (13) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA
    (14) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA
    (20) linst -> . linst statement SEMI
    (21) linst -> . statement SEMI
    (22) linst -> . linst controlStruct
    (23) linst -> . controlStruct
    (24) linst -> . controlStruct linst
    (25) linst -> . linst expression SEMI
    (26) linst -> . expression SEMI
    (27) linst -> . linst return
    (28) linst -> . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    FUNCTIONDEF     shift and go to state 7
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    start                          shift and go to state 1
    prog                           shift and go to state 2
    functions                      shift and go to state 3
    main                           shift and go to state 4
    function                       shift and go to state 5
    linst                          shift and go to state 6
    statement                      shift and go to state 10
    controlStruct                  shift and go to state 11
    expression                     shift and go to state 12
    return                         shift and go to state 13
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 1

    (0) S' -> start .



state 2

    (1) start -> prog .

    $end            reduce using rule 1 (start -> prog .)


state 3

    (2) prog -> functions . main functions
    (3) prog -> functions . main
    (6) prog -> functions .
    (7) functions -> functions . function
    (19) main -> . linst
    (13) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA
    (14) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA
    (20) linst -> . linst statement SEMI
    (21) linst -> . statement SEMI
    (22) linst -> . linst controlStruct
    (23) linst -> . controlStruct
    (24) linst -> . controlStruct linst
    (25) linst -> . linst expression SEMI
    (26) linst -> . expression SEMI
    (27) linst -> . linst return
    (28) linst -> . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    $end            reduce using rule 6 (prog -> functions .)
    FUNCTIONDEF     shift and go to state 7
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    main                           shift and go to state 23
    function                       shift and go to state 24
    linst                          shift and go to state 6
    statement                      shift and go to state 10
    controlStruct                  shift and go to state 11
    expression                     shift and go to state 12
    return                         shift and go to state 13
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 4

    (4) prog -> main . functions
    (5) prog -> main .
    (7) functions -> . functions function
    (8) functions -> . function
    (13) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA
    (14) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA

    $end            reduce using rule 5 (prog -> main .)
    FUNCTIONDEF     shift and go to state 7

    functions                      shift and go to state 25
    function                       shift and go to state 5

state 5

    (8) functions -> function .

    FUNCTIONDEF     reduce using rule 8 (functions -> function .)
    PRINT           reduce using rule 8 (functions -> function .)
    NAME            reduce using rule 8 (functions -> function .)
    RETURN          reduce using rule 8 (functions -> function .)
    LPAREN          reduce using rule 8 (functions -> function .)
    NUMBER          reduce using rule 8 (functions -> function .)
    FOR             reduce using rule 8 (functions -> function .)
    WHILE           reduce using rule 8 (functions -> function .)
    IF              reduce using rule 8 (functions -> function .)
    $end            reduce using rule 8 (functions -> function .)


state 6

    (19) main -> linst .
    (20) linst -> linst . statement SEMI
    (22) linst -> linst . controlStruct
    (25) linst -> linst . expression SEMI
    (27) linst -> linst . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    FUNCTIONDEF     reduce using rule 19 (main -> linst .)
    $end            reduce using rule 19 (main -> linst .)
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    statement                      shift and go to state 26
    controlStruct                  shift and go to state 27
    expression                     shift and go to state 28
    return                         shift and go to state 29
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 7

    (13) function -> FUNCTIONDEF . NAME LPAREN param RPAREN LBRA linst RBRA
    (14) function -> FUNCTIONDEF . NAME LPAREN RPAREN LBRA linst RBRA

    NAME            shift and go to state 30


state 8

    (39) statement -> NAME . EGAL expression
    (32) expression -> NAME . LPAREN paramcall RPAREN
    (33) expression -> NAME . LPAREN RPAREN
    (56) expression -> NAME .

    EGAL            shift and go to state 31
    LPAREN          shift and go to state 32
    SEMI            reduce using rule 56 (expression -> NAME .)
    INF             reduce using rule 56 (expression -> NAME .)
    INFEG           reduce using rule 56 (expression -> NAME .)
    EGALEGAL        reduce using rule 56 (expression -> NAME .)
    AND             reduce using rule 56 (expression -> NAME .)
    OR              reduce using rule 56 (expression -> NAME .)
    PLUS            reduce using rule 56 (expression -> NAME .)
    TIMES           reduce using rule 56 (expression -> NAME .)
    MINUS           reduce using rule 56 (expression -> NAME .)
    DIVIDE          reduce using rule 56 (expression -> NAME .)
    MODULO          reduce using rule 56 (expression -> NAME .)
    SUP             reduce using rule 56 (expression -> NAME .)
    SUPEG           reduce using rule 56 (expression -> NAME .)
    INC             reduce using rule 56 (expression -> NAME .)
    DEC             reduce using rule 56 (expression -> NAME .)


state 9

    (54) expression -> LPAREN . expression RPAREN
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 33

state 10

    (21) linst -> statement . SEMI

    SEMI            shift and go to state 36


state 11

    (23) linst -> controlStruct .
    (24) linst -> controlStruct . linst
    (20) linst -> . linst statement SEMI
    (21) linst -> . statement SEMI
    (22) linst -> . linst controlStruct
    (23) linst -> . controlStruct
    (24) linst -> . controlStruct linst
    (25) linst -> . linst expression SEMI
    (26) linst -> . expression SEMI
    (27) linst -> . linst return
    (28) linst -> . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    FUNCTIONDEF     reduce using rule 23 (linst -> controlStruct .)
    $end            reduce using rule 23 (linst -> controlStruct .)
    RBRA            reduce using rule 23 (linst -> controlStruct .)
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

  ! PRINT           [ reduce using rule 23 (linst -> controlStruct .) ]
  ! NAME            [ reduce using rule 23 (linst -> controlStruct .) ]
  ! RETURN          [ reduce using rule 23 (linst -> controlStruct .) ]
  ! LPAREN          [ reduce using rule 23 (linst -> controlStruct .) ]
  ! NUMBER          [ reduce using rule 23 (linst -> controlStruct .) ]
  ! FOR             [ reduce using rule 23 (linst -> controlStruct .) ]
  ! WHILE           [ reduce using rule 23 (linst -> controlStruct .) ]
  ! IF              [ reduce using rule 23 (linst -> controlStruct .) ]

    controlStruct                  shift and go to state 11
    linst                          shift and go to state 37
    statement                      shift and go to state 10
    expression                     shift and go to state 12
    return                         shift and go to state 13
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 12

    (26) linst -> expression . SEMI
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            shift and go to state 38
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52


state 13

    (28) linst -> return .

    PRINT           reduce using rule 28 (linst -> return .)
    NAME            reduce using rule 28 (linst -> return .)
    RETURN          reduce using rule 28 (linst -> return .)
    LPAREN          reduce using rule 28 (linst -> return .)
    NUMBER          reduce using rule 28 (linst -> return .)
    FOR             reduce using rule 28 (linst -> return .)
    WHILE           reduce using rule 28 (linst -> return .)
    IF              reduce using rule 28 (linst -> return .)
    FUNCTIONDEF     reduce using rule 28 (linst -> return .)
    $end            reduce using rule 28 (linst -> return .)
    RBRA            reduce using rule 28 (linst -> return .)


state 14

    (34) statement -> PRINT . LPAREN paramcall RPAREN

    LPAREN          shift and go to state 53


state 15

    (29) controlStruct -> for .

    PRINT           reduce using rule 29 (controlStruct -> for .)
    NAME            reduce using rule 29 (controlStruct -> for .)
    RETURN          reduce using rule 29 (controlStruct -> for .)
    LPAREN          reduce using rule 29 (controlStruct -> for .)
    NUMBER          reduce using rule 29 (controlStruct -> for .)
    FOR             reduce using rule 29 (controlStruct -> for .)
    WHILE           reduce using rule 29 (controlStruct -> for .)
    IF              reduce using rule 29 (controlStruct -> for .)
    FUNCTIONDEF     reduce using rule 29 (controlStruct -> for .)
    $end            reduce using rule 29 (controlStruct -> for .)
    RBRA            reduce using rule 29 (controlStruct -> for .)


state 16

    (30) controlStruct -> while .

    PRINT           reduce using rule 30 (controlStruct -> while .)
    NAME            reduce using rule 30 (controlStruct -> while .)
    RETURN          reduce using rule 30 (controlStruct -> while .)
    LPAREN          reduce using rule 30 (controlStruct -> while .)
    NUMBER          reduce using rule 30 (controlStruct -> while .)
    FOR             reduce using rule 30 (controlStruct -> while .)
    WHILE           reduce using rule 30 (controlStruct -> while .)
    IF              reduce using rule 30 (controlStruct -> while .)
    FUNCTIONDEF     reduce using rule 30 (controlStruct -> while .)
    $end            reduce using rule 30 (controlStruct -> while .)
    RBRA            reduce using rule 30 (controlStruct -> while .)


state 17

    (31) controlStruct -> if .

    PRINT           reduce using rule 31 (controlStruct -> if .)
    NAME            reduce using rule 31 (controlStruct -> if .)
    RETURN          reduce using rule 31 (controlStruct -> if .)
    LPAREN          reduce using rule 31 (controlStruct -> if .)
    NUMBER          reduce using rule 31 (controlStruct -> if .)
    FOR             reduce using rule 31 (controlStruct -> if .)
    WHILE           reduce using rule 31 (controlStruct -> if .)
    IF              reduce using rule 31 (controlStruct -> if .)
    FUNCTIONDEF     reduce using rule 31 (controlStruct -> if .)
    $end            reduce using rule 31 (controlStruct -> if .)
    RBRA            reduce using rule 31 (controlStruct -> if .)


state 18

    (11) expression -> RETURN . expression
    (12) expression -> RETURN .
    (9) return -> RETURN . expression SEMI
    (10) return -> RETURN . SEMI
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

  ! shift/reduce conflict for SEMI resolved as shift
    INF             reduce using rule 12 (expression -> RETURN .)
    INFEG           reduce using rule 12 (expression -> RETURN .)
    EGALEGAL        reduce using rule 12 (expression -> RETURN .)
    AND             reduce using rule 12 (expression -> RETURN .)
    OR              reduce using rule 12 (expression -> RETURN .)
    PLUS            reduce using rule 12 (expression -> RETURN .)
    TIMES           reduce using rule 12 (expression -> RETURN .)
    MINUS           reduce using rule 12 (expression -> RETURN .)
    DIVIDE          reduce using rule 12 (expression -> RETURN .)
    MODULO          reduce using rule 12 (expression -> RETURN .)
    SUP             reduce using rule 12 (expression -> RETURN .)
    SUPEG           reduce using rule 12 (expression -> RETURN .)
    INC             reduce using rule 12 (expression -> RETURN .)
    DEC             reduce using rule 12 (expression -> RETURN .)
    SEMI            shift and go to state 55
    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

  ! SEMI            [ reduce using rule 12 (expression -> RETURN .) ]

    expression                     shift and go to state 54

state 19

    (55) expression -> NUMBER .

    SEMI            reduce using rule 55 (expression -> NUMBER .)
    INF             reduce using rule 55 (expression -> NUMBER .)
    INFEG           reduce using rule 55 (expression -> NUMBER .)
    EGALEGAL        reduce using rule 55 (expression -> NUMBER .)
    AND             reduce using rule 55 (expression -> NUMBER .)
    OR              reduce using rule 55 (expression -> NUMBER .)
    PLUS            reduce using rule 55 (expression -> NUMBER .)
    TIMES           reduce using rule 55 (expression -> NUMBER .)
    MINUS           reduce using rule 55 (expression -> NUMBER .)
    DIVIDE          reduce using rule 55 (expression -> NUMBER .)
    MODULO          reduce using rule 55 (expression -> NUMBER .)
    SUP             reduce using rule 55 (expression -> NUMBER .)
    SUPEG           reduce using rule 55 (expression -> NUMBER .)
    INC             reduce using rule 55 (expression -> NUMBER .)
    DEC             reduce using rule 55 (expression -> NUMBER .)
    RPAREN          reduce using rule 55 (expression -> NUMBER .)
    COMMA           reduce using rule 55 (expression -> NUMBER .)


state 20

    (35) for -> FOR . LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA

    LPAREN          shift and go to state 56


state 21

    (36) while -> WHILE . LPAREN expression RPAREN LBRA linst RBRA

    LPAREN          shift and go to state 57


state 22

    (37) if -> IF . LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> IF . LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    LPAREN          shift and go to state 58


state 23

    (2) prog -> functions main . functions
    (3) prog -> functions main .
    (7) functions -> . functions function
    (8) functions -> . function
    (13) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA
    (14) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA

    $end            reduce using rule 3 (prog -> functions main .)
    FUNCTIONDEF     shift and go to state 7

    functions                      shift and go to state 59
    function                       shift and go to state 5

state 24

    (7) functions -> functions function .

    FUNCTIONDEF     reduce using rule 7 (functions -> functions function .)
    PRINT           reduce using rule 7 (functions -> functions function .)
    NAME            reduce using rule 7 (functions -> functions function .)
    RETURN          reduce using rule 7 (functions -> functions function .)
    LPAREN          reduce using rule 7 (functions -> functions function .)
    NUMBER          reduce using rule 7 (functions -> functions function .)
    FOR             reduce using rule 7 (functions -> functions function .)
    WHILE           reduce using rule 7 (functions -> functions function .)
    IF              reduce using rule 7 (functions -> functions function .)
    $end            reduce using rule 7 (functions -> functions function .)


state 25

    (4) prog -> main functions .
    (7) functions -> functions . function
    (13) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA
    (14) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA

    $end            reduce using rule 4 (prog -> main functions .)
    FUNCTIONDEF     shift and go to state 7

    function                       shift and go to state 24

state 26

    (20) linst -> linst statement . SEMI

    SEMI            shift and go to state 60


state 27

    (22) linst -> linst controlStruct .

    PRINT           reduce using rule 22 (linst -> linst controlStruct .)
    NAME            reduce using rule 22 (linst -> linst controlStruct .)
    RETURN          reduce using rule 22 (linst -> linst controlStruct .)
    LPAREN          reduce using rule 22 (linst -> linst controlStruct .)
    NUMBER          reduce using rule 22 (linst -> linst controlStruct .)
    FOR             reduce using rule 22 (linst -> linst controlStruct .)
    WHILE           reduce using rule 22 (linst -> linst controlStruct .)
    IF              reduce using rule 22 (linst -> linst controlStruct .)
    FUNCTIONDEF     reduce using rule 22 (linst -> linst controlStruct .)
    $end            reduce using rule 22 (linst -> linst controlStruct .)
    RBRA            reduce using rule 22 (linst -> linst controlStruct .)


state 28

    (25) linst -> linst expression . SEMI
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            shift and go to state 61
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52


state 29

    (27) linst -> linst return .

    PRINT           reduce using rule 27 (linst -> linst return .)
    NAME            reduce using rule 27 (linst -> linst return .)
    RETURN          reduce using rule 27 (linst -> linst return .)
    LPAREN          reduce using rule 27 (linst -> linst return .)
    NUMBER          reduce using rule 27 (linst -> linst return .)
    FOR             reduce using rule 27 (linst -> linst return .)
    WHILE           reduce using rule 27 (linst -> linst return .)
    IF              reduce using rule 27 (linst -> linst return .)
    FUNCTIONDEF     reduce using rule 27 (linst -> linst return .)
    $end            reduce using rule 27 (linst -> linst return .)
    RBRA            reduce using rule 27 (linst -> linst return .)


state 30

    (13) function -> FUNCTIONDEF NAME . LPAREN param RPAREN LBRA linst RBRA
    (14) function -> FUNCTIONDEF NAME . LPAREN RPAREN LBRA linst RBRA

    LPAREN          shift and go to state 62


state 31

    (39) statement -> NAME EGAL . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 63

state 32

    (32) expression -> NAME LPAREN . paramcall RPAREN
    (33) expression -> NAME LPAREN . RPAREN
    (17) paramcall -> . paramcall COMMA expression
    (18) paramcall -> . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RPAREN          shift and go to state 65
    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    paramcall                      shift and go to state 64
    expression                     shift and go to state 66

state 33

    (54) expression -> LPAREN expression . RPAREN
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    RPAREN          shift and go to state 67
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52


state 34

    (11) expression -> RETURN . expression
    (12) expression -> RETURN .
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RPAREN          reduce using rule 12 (expression -> RETURN .)
    INF             reduce using rule 12 (expression -> RETURN .)
    INFEG           reduce using rule 12 (expression -> RETURN .)
    EGALEGAL        reduce using rule 12 (expression -> RETURN .)
    AND             reduce using rule 12 (expression -> RETURN .)
    OR              reduce using rule 12 (expression -> RETURN .)
    PLUS            reduce using rule 12 (expression -> RETURN .)
    TIMES           reduce using rule 12 (expression -> RETURN .)
    MINUS           reduce using rule 12 (expression -> RETURN .)
    DIVIDE          reduce using rule 12 (expression -> RETURN .)
    MODULO          reduce using rule 12 (expression -> RETURN .)
    SUP             reduce using rule 12 (expression -> RETURN .)
    SUPEG           reduce using rule 12 (expression -> RETURN .)
    INC             reduce using rule 12 (expression -> RETURN .)
    DEC             reduce using rule 12 (expression -> RETURN .)
    SEMI            reduce using rule 12 (expression -> RETURN .)
    COMMA           reduce using rule 12 (expression -> RETURN .)
    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 68

state 35

    (32) expression -> NAME . LPAREN paramcall RPAREN
    (33) expression -> NAME . LPAREN RPAREN
    (56) expression -> NAME .

    LPAREN          shift and go to state 32
    RPAREN          reduce using rule 56 (expression -> NAME .)
    INF             reduce using rule 56 (expression -> NAME .)
    INFEG           reduce using rule 56 (expression -> NAME .)
    EGALEGAL        reduce using rule 56 (expression -> NAME .)
    AND             reduce using rule 56 (expression -> NAME .)
    OR              reduce using rule 56 (expression -> NAME .)
    PLUS            reduce using rule 56 (expression -> NAME .)
    TIMES           reduce using rule 56 (expression -> NAME .)
    MINUS           reduce using rule 56 (expression -> NAME .)
    DIVIDE          reduce using rule 56 (expression -> NAME .)
    MODULO          reduce using rule 56 (expression -> NAME .)
    SUP             reduce using rule 56 (expression -> NAME .)
    SUPEG           reduce using rule 56 (expression -> NAME .)
    INC             reduce using rule 56 (expression -> NAME .)
    DEC             reduce using rule 56 (expression -> NAME .)
    SEMI            reduce using rule 56 (expression -> NAME .)
    COMMA           reduce using rule 56 (expression -> NAME .)


state 36

    (21) linst -> statement SEMI .

    PRINT           reduce using rule 21 (linst -> statement SEMI .)
    NAME            reduce using rule 21 (linst -> statement SEMI .)
    RETURN          reduce using rule 21 (linst -> statement SEMI .)
    LPAREN          reduce using rule 21 (linst -> statement SEMI .)
    NUMBER          reduce using rule 21 (linst -> statement SEMI .)
    FOR             reduce using rule 21 (linst -> statement SEMI .)
    WHILE           reduce using rule 21 (linst -> statement SEMI .)
    IF              reduce using rule 21 (linst -> statement SEMI .)
    FUNCTIONDEF     reduce using rule 21 (linst -> statement SEMI .)
    $end            reduce using rule 21 (linst -> statement SEMI .)
    RBRA            reduce using rule 21 (linst -> statement SEMI .)


state 37

    (24) linst -> controlStruct linst .
    (20) linst -> linst . statement SEMI
    (22) linst -> linst . controlStruct
    (25) linst -> linst . expression SEMI
    (27) linst -> linst . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    FUNCTIONDEF     reduce using rule 24 (linst -> controlStruct linst .)
    $end            reduce using rule 24 (linst -> controlStruct linst .)
    RBRA            reduce using rule 24 (linst -> controlStruct linst .)
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

  ! PRINT           [ reduce using rule 24 (linst -> controlStruct linst .) ]
  ! NAME            [ reduce using rule 24 (linst -> controlStruct linst .) ]
  ! RETURN          [ reduce using rule 24 (linst -> controlStruct linst .) ]
  ! LPAREN          [ reduce using rule 24 (linst -> controlStruct linst .) ]
  ! NUMBER          [ reduce using rule 24 (linst -> controlStruct linst .) ]
  ! FOR             [ reduce using rule 24 (linst -> controlStruct linst .) ]
  ! WHILE           [ reduce using rule 24 (linst -> controlStruct linst .) ]
  ! IF              [ reduce using rule 24 (linst -> controlStruct linst .) ]

    controlStruct                  shift and go to state 27
    statement                      shift and go to state 26
    expression                     shift and go to state 28
    return                         shift and go to state 29
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 38

    (26) linst -> expression SEMI .

    PRINT           reduce using rule 26 (linst -> expression SEMI .)
    NAME            reduce using rule 26 (linst -> expression SEMI .)
    RETURN          reduce using rule 26 (linst -> expression SEMI .)
    LPAREN          reduce using rule 26 (linst -> expression SEMI .)
    NUMBER          reduce using rule 26 (linst -> expression SEMI .)
    FOR             reduce using rule 26 (linst -> expression SEMI .)
    WHILE           reduce using rule 26 (linst -> expression SEMI .)
    IF              reduce using rule 26 (linst -> expression SEMI .)
    FUNCTIONDEF     reduce using rule 26 (linst -> expression SEMI .)
    $end            reduce using rule 26 (linst -> expression SEMI .)
    RBRA            reduce using rule 26 (linst -> expression SEMI .)


state 39

    (40) expression -> expression INF . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 69

state 40

    (41) expression -> expression INFEG . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 70

state 41

    (42) expression -> expression EGALEGAL . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 71

state 42

    (43) expression -> expression AND . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 72

state 43

    (44) expression -> expression OR . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 73

state 44

    (45) expression -> expression PLUS . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 74

state 45

    (46) expression -> expression TIMES . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 75

state 46

    (47) expression -> expression MINUS . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 76

state 47

    (48) expression -> expression DIVIDE . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 77

state 48

    (49) expression -> expression MODULO . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 78

state 49

    (50) expression -> expression SUP . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 79

state 50

    (51) expression -> expression SUPEG . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 80

state 51

    (52) expression -> expression INC .

    SEMI            reduce using rule 52 (expression -> expression INC .)
    INF             reduce using rule 52 (expression -> expression INC .)
    INFEG           reduce using rule 52 (expression -> expression INC .)
    EGALEGAL        reduce using rule 52 (expression -> expression INC .)
    AND             reduce using rule 52 (expression -> expression INC .)
    OR              reduce using rule 52 (expression -> expression INC .)
    PLUS            reduce using rule 52 (expression -> expression INC .)
    TIMES           reduce using rule 52 (expression -> expression INC .)
    MINUS           reduce using rule 52 (expression -> expression INC .)
    DIVIDE          reduce using rule 52 (expression -> expression INC .)
    MODULO          reduce using rule 52 (expression -> expression INC .)
    SUP             reduce using rule 52 (expression -> expression INC .)
    SUPEG           reduce using rule 52 (expression -> expression INC .)
    INC             reduce using rule 52 (expression -> expression INC .)
    DEC             reduce using rule 52 (expression -> expression INC .)
    RPAREN          reduce using rule 52 (expression -> expression INC .)
    COMMA           reduce using rule 52 (expression -> expression INC .)


state 52

    (53) expression -> expression DEC .

    SEMI            reduce using rule 53 (expression -> expression DEC .)
    INF             reduce using rule 53 (expression -> expression DEC .)
    INFEG           reduce using rule 53 (expression -> expression DEC .)
    EGALEGAL        reduce using rule 53 (expression -> expression DEC .)
    AND             reduce using rule 53 (expression -> expression DEC .)
    OR              reduce using rule 53 (expression -> expression DEC .)
    PLUS            reduce using rule 53 (expression -> expression DEC .)
    TIMES           reduce using rule 53 (expression -> expression DEC .)
    MINUS           reduce using rule 53 (expression -> expression DEC .)
    DIVIDE          reduce using rule 53 (expression -> expression DEC .)
    MODULO          reduce using rule 53 (expression -> expression DEC .)
    SUP             reduce using rule 53 (expression -> expression DEC .)
    SUPEG           reduce using rule 53 (expression -> expression DEC .)
    INC             reduce using rule 53 (expression -> expression DEC .)
    DEC             reduce using rule 53 (expression -> expression DEC .)
    RPAREN          reduce using rule 53 (expression -> expression DEC .)
    COMMA           reduce using rule 53 (expression -> expression DEC .)


state 53

    (34) statement -> PRINT LPAREN . paramcall RPAREN
    (17) paramcall -> . paramcall COMMA expression
    (18) paramcall -> . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    paramcall                      shift and go to state 81
    expression                     shift and go to state 66

state 54

    (11) expression -> RETURN expression .
    (9) return -> RETURN expression . SEMI
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for INFEG resolved as shift
  ! shift/reduce conflict for EGALEGAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for SUPEG resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
    SEMI            shift and go to state 82
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52

  ! SEMI            [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! INF             [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! INFEG           [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! EGALEGAL        [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! AND             [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! OR              [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! PLUS            [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! MODULO          [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! SUP             [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! SUPEG           [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! INC             [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! DEC             [ reduce using rule 11 (expression -> RETURN expression .) ]


state 55

    (10) return -> RETURN SEMI .

    PRINT           reduce using rule 10 (return -> RETURN SEMI .)
    NAME            reduce using rule 10 (return -> RETURN SEMI .)
    RETURN          reduce using rule 10 (return -> RETURN SEMI .)
    LPAREN          reduce using rule 10 (return -> RETURN SEMI .)
    NUMBER          reduce using rule 10 (return -> RETURN SEMI .)
    FOR             reduce using rule 10 (return -> RETURN SEMI .)
    WHILE           reduce using rule 10 (return -> RETURN SEMI .)
    IF              reduce using rule 10 (return -> RETURN SEMI .)
    FUNCTIONDEF     reduce using rule 10 (return -> RETURN SEMI .)
    $end            reduce using rule 10 (return -> RETURN SEMI .)
    RBRA            reduce using rule 10 (return -> RETURN SEMI .)


state 56

    (35) for -> FOR LPAREN . statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression

    PRINT           shift and go to state 14
    NAME            shift and go to state 84

    statement                      shift and go to state 83

state 57

    (36) while -> WHILE LPAREN . expression RPAREN LBRA linst RBRA
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 85

state 58

    (37) if -> IF LPAREN . expression RPAREN LBRA linst RBRA
    (38) if -> IF LPAREN . expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 86

state 59

    (2) prog -> functions main functions .
    (7) functions -> functions . function
    (13) function -> . FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA
    (14) function -> . FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA

    $end            reduce using rule 2 (prog -> functions main functions .)
    FUNCTIONDEF     shift and go to state 7

    function                       shift and go to state 24

state 60

    (20) linst -> linst statement SEMI .

    PRINT           reduce using rule 20 (linst -> linst statement SEMI .)
    NAME            reduce using rule 20 (linst -> linst statement SEMI .)
    RETURN          reduce using rule 20 (linst -> linst statement SEMI .)
    LPAREN          reduce using rule 20 (linst -> linst statement SEMI .)
    NUMBER          reduce using rule 20 (linst -> linst statement SEMI .)
    FOR             reduce using rule 20 (linst -> linst statement SEMI .)
    WHILE           reduce using rule 20 (linst -> linst statement SEMI .)
    IF              reduce using rule 20 (linst -> linst statement SEMI .)
    FUNCTIONDEF     reduce using rule 20 (linst -> linst statement SEMI .)
    $end            reduce using rule 20 (linst -> linst statement SEMI .)
    RBRA            reduce using rule 20 (linst -> linst statement SEMI .)


state 61

    (25) linst -> linst expression SEMI .

    PRINT           reduce using rule 25 (linst -> linst expression SEMI .)
    NAME            reduce using rule 25 (linst -> linst expression SEMI .)
    RETURN          reduce using rule 25 (linst -> linst expression SEMI .)
    LPAREN          reduce using rule 25 (linst -> linst expression SEMI .)
    NUMBER          reduce using rule 25 (linst -> linst expression SEMI .)
    FOR             reduce using rule 25 (linst -> linst expression SEMI .)
    WHILE           reduce using rule 25 (linst -> linst expression SEMI .)
    IF              reduce using rule 25 (linst -> linst expression SEMI .)
    FUNCTIONDEF     reduce using rule 25 (linst -> linst expression SEMI .)
    $end            reduce using rule 25 (linst -> linst expression SEMI .)
    RBRA            reduce using rule 25 (linst -> linst expression SEMI .)


state 62

    (13) function -> FUNCTIONDEF NAME LPAREN . param RPAREN LBRA linst RBRA
    (14) function -> FUNCTIONDEF NAME LPAREN . RPAREN LBRA linst RBRA
    (15) param -> . param COMMA NAME
    (16) param -> . NAME

    RPAREN          shift and go to state 89
    NAME            shift and go to state 87

    param                          shift and go to state 88

state 63

    (39) statement -> NAME EGAL expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 39 (statement -> NAME EGAL expression .)
    RPAREN          reduce using rule 39 (statement -> NAME EGAL expression .)
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52


state 64

    (32) expression -> NAME LPAREN paramcall . RPAREN
    (17) paramcall -> paramcall . COMMA expression

    RPAREN          shift and go to state 90
    COMMA           shift and go to state 91


state 65

    (33) expression -> NAME LPAREN RPAREN .

    SEMI            reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    INF             reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    INFEG           reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    EGALEGAL        reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    AND             reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    OR              reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    PLUS            reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    TIMES           reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    MINUS           reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    DIVIDE          reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    MODULO          reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    SUP             reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    SUPEG           reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    INC             reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    DEC             reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 33 (expression -> NAME LPAREN RPAREN .)
    COMMA           reduce using rule 33 (expression -> NAME LPAREN RPAREN .)


state 66

    (18) paramcall -> expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    RPAREN          reduce using rule 18 (paramcall -> expression .)
    COMMA           reduce using rule 18 (paramcall -> expression .)
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52


state 67

    (54) expression -> LPAREN expression RPAREN .

    SEMI            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    INFEG           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    EGALEGAL        reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    SUPEG           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    INC             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    DEC             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 54 (expression -> LPAREN expression RPAREN .)


state 68

    (11) expression -> RETURN expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for INFEG resolved as shift
  ! shift/reduce conflict for EGALEGAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for SUPEG resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
    RPAREN          reduce using rule 11 (expression -> RETURN expression .)
    SEMI            reduce using rule 11 (expression -> RETURN expression .)
    COMMA           reduce using rule 11 (expression -> RETURN expression .)
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52

  ! INF             [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! INFEG           [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! EGALEGAL        [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! AND             [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! OR              [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! PLUS            [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! MODULO          [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! SUP             [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! SUPEG           [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! INC             [ reduce using rule 11 (expression -> RETURN expression .) ]
  ! DEC             [ reduce using rule 11 (expression -> RETURN expression .) ]


state 69

    (40) expression -> expression INF expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 40 (expression -> expression INF expression .)
    INF             reduce using rule 40 (expression -> expression INF expression .)
    INFEG           reduce using rule 40 (expression -> expression INF expression .)
    EGALEGAL        reduce using rule 40 (expression -> expression INF expression .)
    AND             reduce using rule 40 (expression -> expression INF expression .)
    OR              reduce using rule 40 (expression -> expression INF expression .)
    SUP             reduce using rule 40 (expression -> expression INF expression .)
    SUPEG           reduce using rule 40 (expression -> expression INF expression .)
    INC             reduce using rule 40 (expression -> expression INF expression .)
    DEC             reduce using rule 40 (expression -> expression INF expression .)
    RPAREN          reduce using rule 40 (expression -> expression INF expression .)
    COMMA           reduce using rule 40 (expression -> expression INF expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48

  ! PLUS            [ reduce using rule 40 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression INF expression .) ]
  ! MODULO          [ reduce using rule 40 (expression -> expression INF expression .) ]
  ! INF             [ shift and go to state 39 ]
  ! INFEG           [ shift and go to state 40 ]
  ! EGALEGAL        [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 49 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 70

    (41) expression -> expression INFEG expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 41 (expression -> expression INFEG expression .)
    INF             reduce using rule 41 (expression -> expression INFEG expression .)
    INFEG           reduce using rule 41 (expression -> expression INFEG expression .)
    EGALEGAL        reduce using rule 41 (expression -> expression INFEG expression .)
    AND             reduce using rule 41 (expression -> expression INFEG expression .)
    OR              reduce using rule 41 (expression -> expression INFEG expression .)
    SUP             reduce using rule 41 (expression -> expression INFEG expression .)
    SUPEG           reduce using rule 41 (expression -> expression INFEG expression .)
    INC             reduce using rule 41 (expression -> expression INFEG expression .)
    DEC             reduce using rule 41 (expression -> expression INFEG expression .)
    RPAREN          reduce using rule 41 (expression -> expression INFEG expression .)
    COMMA           reduce using rule 41 (expression -> expression INFEG expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48

  ! PLUS            [ reduce using rule 41 (expression -> expression INFEG expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression INFEG expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression INFEG expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression INFEG expression .) ]
  ! MODULO          [ reduce using rule 41 (expression -> expression INFEG expression .) ]
  ! INF             [ shift and go to state 39 ]
  ! INFEG           [ shift and go to state 40 ]
  ! EGALEGAL        [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 49 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 71

    (42) expression -> expression EGALEGAL expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 42 (expression -> expression EGALEGAL expression .)
    INF             reduce using rule 42 (expression -> expression EGALEGAL expression .)
    INFEG           reduce using rule 42 (expression -> expression EGALEGAL expression .)
    EGALEGAL        reduce using rule 42 (expression -> expression EGALEGAL expression .)
    AND             reduce using rule 42 (expression -> expression EGALEGAL expression .)
    OR              reduce using rule 42 (expression -> expression EGALEGAL expression .)
    SUP             reduce using rule 42 (expression -> expression EGALEGAL expression .)
    SUPEG           reduce using rule 42 (expression -> expression EGALEGAL expression .)
    INC             reduce using rule 42 (expression -> expression EGALEGAL expression .)
    DEC             reduce using rule 42 (expression -> expression EGALEGAL expression .)
    RPAREN          reduce using rule 42 (expression -> expression EGALEGAL expression .)
    COMMA           reduce using rule 42 (expression -> expression EGALEGAL expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48

  ! PLUS            [ reduce using rule 42 (expression -> expression EGALEGAL expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression EGALEGAL expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression EGALEGAL expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression EGALEGAL expression .) ]
  ! MODULO          [ reduce using rule 42 (expression -> expression EGALEGAL expression .) ]
  ! INF             [ shift and go to state 39 ]
  ! INFEG           [ shift and go to state 40 ]
  ! EGALEGAL        [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 49 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 72

    (43) expression -> expression AND expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 43 (expression -> expression AND expression .)
    AND             reduce using rule 43 (expression -> expression AND expression .)
    OR              reduce using rule 43 (expression -> expression AND expression .)
    SUPEG           reduce using rule 43 (expression -> expression AND expression .)
    INC             reduce using rule 43 (expression -> expression AND expression .)
    DEC             reduce using rule 43 (expression -> expression AND expression .)
    RPAREN          reduce using rule 43 (expression -> expression AND expression .)
    COMMA           reduce using rule 43 (expression -> expression AND expression .)
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49

  ! INF             [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! INFEG           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! EGALEGAL        [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 73

    (44) expression -> expression OR expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 44 (expression -> expression OR expression .)
    OR              reduce using rule 44 (expression -> expression OR expression .)
    SUPEG           reduce using rule 44 (expression -> expression OR expression .)
    INC             reduce using rule 44 (expression -> expression OR expression .)
    DEC             reduce using rule 44 (expression -> expression OR expression .)
    RPAREN          reduce using rule 44 (expression -> expression OR expression .)
    COMMA           reduce using rule 44 (expression -> expression OR expression .)
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49

  ! INF             [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! INFEG           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! EGALEGAL        [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 43 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 74

    (45) expression -> expression PLUS expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 45 (expression -> expression PLUS expression .)
    INF             reduce using rule 45 (expression -> expression PLUS expression .)
    INFEG           reduce using rule 45 (expression -> expression PLUS expression .)
    EGALEGAL        reduce using rule 45 (expression -> expression PLUS expression .)
    AND             reduce using rule 45 (expression -> expression PLUS expression .)
    OR              reduce using rule 45 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 45 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 45 (expression -> expression PLUS expression .)
    SUP             reduce using rule 45 (expression -> expression PLUS expression .)
    SUPEG           reduce using rule 45 (expression -> expression PLUS expression .)
    INC             reduce using rule 45 (expression -> expression PLUS expression .)
    DEC             reduce using rule 45 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 45 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 45 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48

  ! TIMES           [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! INF             [ shift and go to state 39 ]
  ! INFEG           [ shift and go to state 40 ]
  ! EGALEGAL        [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 46 ]
  ! SUP             [ shift and go to state 49 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 75

    (46) expression -> expression TIMES expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 46 (expression -> expression TIMES expression .)
    INF             reduce using rule 46 (expression -> expression TIMES expression .)
    INFEG           reduce using rule 46 (expression -> expression TIMES expression .)
    EGALEGAL        reduce using rule 46 (expression -> expression TIMES expression .)
    AND             reduce using rule 46 (expression -> expression TIMES expression .)
    OR              reduce using rule 46 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 46 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 46 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 46 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 46 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 46 (expression -> expression TIMES expression .)
    SUP             reduce using rule 46 (expression -> expression TIMES expression .)
    SUPEG           reduce using rule 46 (expression -> expression TIMES expression .)
    INC             reduce using rule 46 (expression -> expression TIMES expression .)
    DEC             reduce using rule 46 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 46 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 46 (expression -> expression TIMES expression .)

  ! INF             [ shift and go to state 39 ]
  ! INFEG           [ shift and go to state 40 ]
  ! EGALEGAL        [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! PLUS            [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! MODULO          [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 76

    (47) expression -> expression MINUS expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 47 (expression -> expression MINUS expression .)
    INF             reduce using rule 47 (expression -> expression MINUS expression .)
    INFEG           reduce using rule 47 (expression -> expression MINUS expression .)
    EGALEGAL        reduce using rule 47 (expression -> expression MINUS expression .)
    AND             reduce using rule 47 (expression -> expression MINUS expression .)
    OR              reduce using rule 47 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 47 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 47 (expression -> expression MINUS expression .)
    SUP             reduce using rule 47 (expression -> expression MINUS expression .)
    SUPEG           reduce using rule 47 (expression -> expression MINUS expression .)
    INC             reduce using rule 47 (expression -> expression MINUS expression .)
    DEC             reduce using rule 47 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 47 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 47 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48

  ! TIMES           [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! INF             [ shift and go to state 39 ]
  ! INFEG           [ shift and go to state 40 ]
  ! EGALEGAL        [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 46 ]
  ! SUP             [ shift and go to state 49 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 77

    (48) expression -> expression DIVIDE expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 48 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 48 (expression -> expression DIVIDE expression .)
    INFEG           reduce using rule 48 (expression -> expression DIVIDE expression .)
    EGALEGAL        reduce using rule 48 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 48 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 48 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 48 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 48 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 48 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 48 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 48 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 48 (expression -> expression DIVIDE expression .)
    SUPEG           reduce using rule 48 (expression -> expression DIVIDE expression .)
    INC             reduce using rule 48 (expression -> expression DIVIDE expression .)
    DEC             reduce using rule 48 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 48 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 48 (expression -> expression DIVIDE expression .)

  ! INF             [ shift and go to state 39 ]
  ! INFEG           [ shift and go to state 40 ]
  ! EGALEGAL        [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! PLUS            [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! MODULO          [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 78

    (49) expression -> expression MODULO expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 49 (expression -> expression MODULO expression .)
    INF             reduce using rule 49 (expression -> expression MODULO expression .)
    INFEG           reduce using rule 49 (expression -> expression MODULO expression .)
    EGALEGAL        reduce using rule 49 (expression -> expression MODULO expression .)
    AND             reduce using rule 49 (expression -> expression MODULO expression .)
    OR              reduce using rule 49 (expression -> expression MODULO expression .)
    PLUS            reduce using rule 49 (expression -> expression MODULO expression .)
    TIMES           reduce using rule 49 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 49 (expression -> expression MODULO expression .)
    DIVIDE          reduce using rule 49 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 49 (expression -> expression MODULO expression .)
    SUP             reduce using rule 49 (expression -> expression MODULO expression .)
    SUPEG           reduce using rule 49 (expression -> expression MODULO expression .)
    INC             reduce using rule 49 (expression -> expression MODULO expression .)
    DEC             reduce using rule 49 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 49 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 49 (expression -> expression MODULO expression .)

  ! INF             [ shift and go to state 39 ]
  ! INFEG           [ shift and go to state 40 ]
  ! EGALEGAL        [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! PLUS            [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! MODULO          [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 79

    (50) expression -> expression SUP expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            reduce using rule 50 (expression -> expression SUP expression .)
    INF             reduce using rule 50 (expression -> expression SUP expression .)
    INFEG           reduce using rule 50 (expression -> expression SUP expression .)
    EGALEGAL        reduce using rule 50 (expression -> expression SUP expression .)
    AND             reduce using rule 50 (expression -> expression SUP expression .)
    OR              reduce using rule 50 (expression -> expression SUP expression .)
    SUP             reduce using rule 50 (expression -> expression SUP expression .)
    SUPEG           reduce using rule 50 (expression -> expression SUP expression .)
    INC             reduce using rule 50 (expression -> expression SUP expression .)
    DEC             reduce using rule 50 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 50 (expression -> expression SUP expression .)
    COMMA           reduce using rule 50 (expression -> expression SUP expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48

  ! PLUS            [ reduce using rule 50 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression SUP expression .) ]
  ! MODULO          [ reduce using rule 50 (expression -> expression SUP expression .) ]
  ! INF             [ shift and go to state 39 ]
  ! INFEG           [ shift and go to state 40 ]
  ! EGALEGAL        [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! SUP             [ shift and go to state 49 ]
  ! SUPEG           [ shift and go to state 50 ]
  ! INC             [ shift and go to state 51 ]
  ! DEC             [ shift and go to state 52 ]


state 80

    (51) expression -> expression SUPEG expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for INFEG resolved as shift
  ! shift/reduce conflict for EGALEGAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for SUPEG resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
    SEMI            reduce using rule 51 (expression -> expression SUPEG expression .)
    RPAREN          reduce using rule 51 (expression -> expression SUPEG expression .)
    COMMA           reduce using rule 51 (expression -> expression SUPEG expression .)
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52

  ! INF             [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! INFEG           [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! EGALEGAL        [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! AND             [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! OR              [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! PLUS            [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! MODULO          [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! SUP             [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! SUPEG           [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! INC             [ reduce using rule 51 (expression -> expression SUPEG expression .) ]
  ! DEC             [ reduce using rule 51 (expression -> expression SUPEG expression .) ]


state 81

    (34) statement -> PRINT LPAREN paramcall . RPAREN
    (17) paramcall -> paramcall . COMMA expression

    RPAREN          shift and go to state 92
    COMMA           shift and go to state 91


state 82

    (9) return -> RETURN expression SEMI .

    PRINT           reduce using rule 9 (return -> RETURN expression SEMI .)
    NAME            reduce using rule 9 (return -> RETURN expression SEMI .)
    RETURN          reduce using rule 9 (return -> RETURN expression SEMI .)
    LPAREN          reduce using rule 9 (return -> RETURN expression SEMI .)
    NUMBER          reduce using rule 9 (return -> RETURN expression SEMI .)
    FOR             reduce using rule 9 (return -> RETURN expression SEMI .)
    WHILE           reduce using rule 9 (return -> RETURN expression SEMI .)
    IF              reduce using rule 9 (return -> RETURN expression SEMI .)
    FUNCTIONDEF     reduce using rule 9 (return -> RETURN expression SEMI .)
    $end            reduce using rule 9 (return -> RETURN expression SEMI .)
    RBRA            reduce using rule 9 (return -> RETURN expression SEMI .)


state 83

    (35) for -> FOR LPAREN statement . SEMI expression SEMI statement RPAREN LBRA linst RBRA

    SEMI            shift and go to state 93


state 84

    (39) statement -> NAME . EGAL expression

    EGAL            shift and go to state 31


state 85

    (36) while -> WHILE LPAREN expression . RPAREN LBRA linst RBRA
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    RPAREN          shift and go to state 94
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52


state 86

    (37) if -> IF LPAREN expression . RPAREN LBRA linst RBRA
    (38) if -> IF LPAREN expression . RPAREN LBRA linst RBRA ELSE LBRA linst RBRA
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    RPAREN          shift and go to state 95
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52


state 87

    (16) param -> NAME .

    RPAREN          reduce using rule 16 (param -> NAME .)
    COMMA           reduce using rule 16 (param -> NAME .)


state 88

    (13) function -> FUNCTIONDEF NAME LPAREN param . RPAREN LBRA linst RBRA
    (15) param -> param . COMMA NAME

    RPAREN          shift and go to state 96
    COMMA           shift and go to state 97


state 89

    (14) function -> FUNCTIONDEF NAME LPAREN RPAREN . LBRA linst RBRA

    LBRA            shift and go to state 98


state 90

    (32) expression -> NAME LPAREN paramcall RPAREN .

    SEMI            reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    INF             reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    INFEG           reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    EGALEGAL        reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    AND             reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    OR              reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    PLUS            reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    TIMES           reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    MINUS           reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    MODULO          reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    SUP             reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    SUPEG           reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    INC             reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    DEC             reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    RPAREN          reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)
    COMMA           reduce using rule 32 (expression -> NAME LPAREN paramcall RPAREN .)


state 91

    (17) paramcall -> paramcall COMMA . expression
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 99

state 92

    (34) statement -> PRINT LPAREN paramcall RPAREN .

    SEMI            reduce using rule 34 (statement -> PRINT LPAREN paramcall RPAREN .)
    RPAREN          reduce using rule 34 (statement -> PRINT LPAREN paramcall RPAREN .)


state 93

    (35) for -> FOR LPAREN statement SEMI . expression SEMI statement RPAREN LBRA linst RBRA
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME

    RETURN          shift and go to state 34
    NAME            shift and go to state 35
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19

    expression                     shift and go to state 100

state 94

    (36) while -> WHILE LPAREN expression RPAREN . LBRA linst RBRA

    LBRA            shift and go to state 101


state 95

    (37) if -> IF LPAREN expression RPAREN . LBRA linst RBRA
    (38) if -> IF LPAREN expression RPAREN . LBRA linst RBRA ELSE LBRA linst RBRA

    LBRA            shift and go to state 102


state 96

    (13) function -> FUNCTIONDEF NAME LPAREN param RPAREN . LBRA linst RBRA

    LBRA            shift and go to state 103


state 97

    (15) param -> param COMMA . NAME

    NAME            shift and go to state 104


state 98

    (14) function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA . linst RBRA
    (20) linst -> . linst statement SEMI
    (21) linst -> . statement SEMI
    (22) linst -> . linst controlStruct
    (23) linst -> . controlStruct
    (24) linst -> . controlStruct linst
    (25) linst -> . linst expression SEMI
    (26) linst -> . expression SEMI
    (27) linst -> . linst return
    (28) linst -> . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    linst                          shift and go to state 105
    statement                      shift and go to state 10
    controlStruct                  shift and go to state 11
    expression                     shift and go to state 12
    return                         shift and go to state 13
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 99

    (17) paramcall -> paramcall COMMA expression .
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    RPAREN          reduce using rule 17 (paramcall -> paramcall COMMA expression .)
    COMMA           reduce using rule 17 (paramcall -> paramcall COMMA expression .)
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52


state 100

    (35) for -> FOR LPAREN statement SEMI expression . SEMI statement RPAREN LBRA linst RBRA
    (40) expression -> expression . INF expression
    (41) expression -> expression . INFEG expression
    (42) expression -> expression . EGALEGAL expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MODULO expression
    (50) expression -> expression . SUP expression
    (51) expression -> expression . SUPEG expression
    (52) expression -> expression . INC
    (53) expression -> expression . DEC

    SEMI            shift and go to state 106
    INF             shift and go to state 39
    INFEG           shift and go to state 40
    EGALEGAL        shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    MODULO          shift and go to state 48
    SUP             shift and go to state 49
    SUPEG           shift and go to state 50
    INC             shift and go to state 51
    DEC             shift and go to state 52


state 101

    (36) while -> WHILE LPAREN expression RPAREN LBRA . linst RBRA
    (20) linst -> . linst statement SEMI
    (21) linst -> . statement SEMI
    (22) linst -> . linst controlStruct
    (23) linst -> . controlStruct
    (24) linst -> . controlStruct linst
    (25) linst -> . linst expression SEMI
    (26) linst -> . expression SEMI
    (27) linst -> . linst return
    (28) linst -> . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    expression                     shift and go to state 12
    linst                          shift and go to state 107
    statement                      shift and go to state 10
    controlStruct                  shift and go to state 11
    return                         shift and go to state 13
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 102

    (37) if -> IF LPAREN expression RPAREN LBRA . linst RBRA
    (38) if -> IF LPAREN expression RPAREN LBRA . linst RBRA ELSE LBRA linst RBRA
    (20) linst -> . linst statement SEMI
    (21) linst -> . statement SEMI
    (22) linst -> . linst controlStruct
    (23) linst -> . controlStruct
    (24) linst -> . controlStruct linst
    (25) linst -> . linst expression SEMI
    (26) linst -> . expression SEMI
    (27) linst -> . linst return
    (28) linst -> . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    expression                     shift and go to state 12
    linst                          shift and go to state 108
    statement                      shift and go to state 10
    controlStruct                  shift and go to state 11
    return                         shift and go to state 13
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 103

    (13) function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA . linst RBRA
    (20) linst -> . linst statement SEMI
    (21) linst -> . statement SEMI
    (22) linst -> . linst controlStruct
    (23) linst -> . controlStruct
    (24) linst -> . controlStruct linst
    (25) linst -> . linst expression SEMI
    (26) linst -> . expression SEMI
    (27) linst -> . linst return
    (28) linst -> . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    linst                          shift and go to state 109
    statement                      shift and go to state 10
    controlStruct                  shift and go to state 11
    expression                     shift and go to state 12
    return                         shift and go to state 13
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 104

    (15) param -> param COMMA NAME .

    RPAREN          reduce using rule 15 (param -> param COMMA NAME .)
    COMMA           reduce using rule 15 (param -> param COMMA NAME .)


state 105

    (14) function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst . RBRA
    (20) linst -> linst . statement SEMI
    (22) linst -> linst . controlStruct
    (25) linst -> linst . expression SEMI
    (27) linst -> linst . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            shift and go to state 110
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    statement                      shift and go to state 26
    controlStruct                  shift and go to state 27
    expression                     shift and go to state 28
    return                         shift and go to state 29
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 106

    (35) for -> FOR LPAREN statement SEMI expression SEMI . statement RPAREN LBRA linst RBRA
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression

    PRINT           shift and go to state 14
    NAME            shift and go to state 84

    statement                      shift and go to state 111

state 107

    (36) while -> WHILE LPAREN expression RPAREN LBRA linst . RBRA
    (20) linst -> linst . statement SEMI
    (22) linst -> linst . controlStruct
    (25) linst -> linst . expression SEMI
    (27) linst -> linst . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            shift and go to state 112
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    expression                     shift and go to state 28
    statement                      shift and go to state 26
    controlStruct                  shift and go to state 27
    return                         shift and go to state 29
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 108

    (37) if -> IF LPAREN expression RPAREN LBRA linst . RBRA
    (38) if -> IF LPAREN expression RPAREN LBRA linst . RBRA ELSE LBRA linst RBRA
    (20) linst -> linst . statement SEMI
    (22) linst -> linst . controlStruct
    (25) linst -> linst . expression SEMI
    (27) linst -> linst . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            shift and go to state 113
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    expression                     shift and go to state 28
    statement                      shift and go to state 26
    controlStruct                  shift and go to state 27
    return                         shift and go to state 29
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 109

    (13) function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst . RBRA
    (20) linst -> linst . statement SEMI
    (22) linst -> linst . controlStruct
    (25) linst -> linst . expression SEMI
    (27) linst -> linst . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            shift and go to state 114
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    statement                      shift and go to state 26
    controlStruct                  shift and go to state 27
    expression                     shift and go to state 28
    return                         shift and go to state 29
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 110

    (14) function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .

    FUNCTIONDEF     reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .)
    PRINT           reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .)
    NAME            reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .)
    RETURN          reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .)
    LPAREN          reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .)
    NUMBER          reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .)
    FOR             reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .)
    WHILE           reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .)
    IF              reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .)
    $end            reduce using rule 14 (function -> FUNCTIONDEF NAME LPAREN RPAREN LBRA linst RBRA .)


state 111

    (35) for -> FOR LPAREN statement SEMI expression SEMI statement . RPAREN LBRA linst RBRA

    RPAREN          shift and go to state 115


state 112

    (36) while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .

    PRINT           reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    NAME            reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    RETURN          reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    LPAREN          reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    NUMBER          reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    FOR             reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    WHILE           reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    IF              reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    FUNCTIONDEF     reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    $end            reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)
    RBRA            reduce using rule 36 (while -> WHILE LPAREN expression RPAREN LBRA linst RBRA .)


state 113

    (37) if -> IF LPAREN expression RPAREN LBRA linst RBRA .
    (38) if -> IF LPAREN expression RPAREN LBRA linst RBRA . ELSE LBRA linst RBRA

    PRINT           reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    NAME            reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    RETURN          reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    LPAREN          reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    NUMBER          reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    FOR             reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    WHILE           reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    IF              reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    FUNCTIONDEF     reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    $end            reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    RBRA            reduce using rule 37 (if -> IF LPAREN expression RPAREN LBRA linst RBRA .)
    ELSE            shift and go to state 116


state 114

    (13) function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .

    FUNCTIONDEF     reduce using rule 13 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .)
    PRINT           reduce using rule 13 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .)
    NAME            reduce using rule 13 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .)
    RETURN          reduce using rule 13 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .)
    LPAREN          reduce using rule 13 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .)
    NUMBER          reduce using rule 13 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .)
    FOR             reduce using rule 13 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .)
    WHILE           reduce using rule 13 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .)
    IF              reduce using rule 13 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .)
    $end            reduce using rule 13 (function -> FUNCTIONDEF NAME LPAREN param RPAREN LBRA linst RBRA .)


state 115

    (35) for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN . LBRA linst RBRA

    LBRA            shift and go to state 117


state 116

    (38) if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE . LBRA linst RBRA

    LBRA            shift and go to state 118


state 117

    (35) for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA . linst RBRA
    (20) linst -> . linst statement SEMI
    (21) linst -> . statement SEMI
    (22) linst -> . linst controlStruct
    (23) linst -> . controlStruct
    (24) linst -> . controlStruct linst
    (25) linst -> . linst expression SEMI
    (26) linst -> . expression SEMI
    (27) linst -> . linst return
    (28) linst -> . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    statement                      shift and go to state 10
    expression                     shift and go to state 12
    linst                          shift and go to state 119
    controlStruct                  shift and go to state 11
    return                         shift and go to state 13
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 118

    (38) if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA . linst RBRA
    (20) linst -> . linst statement SEMI
    (21) linst -> . statement SEMI
    (22) linst -> . linst controlStruct
    (23) linst -> . controlStruct
    (24) linst -> . controlStruct linst
    (25) linst -> . linst expression SEMI
    (26) linst -> . expression SEMI
    (27) linst -> . linst return
    (28) linst -> . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    expression                     shift and go to state 12
    linst                          shift and go to state 120
    statement                      shift and go to state 10
    controlStruct                  shift and go to state 11
    return                         shift and go to state 13
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 119

    (35) for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst . RBRA
    (20) linst -> linst . statement SEMI
    (22) linst -> linst . controlStruct
    (25) linst -> linst . expression SEMI
    (27) linst -> linst . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            shift and go to state 121
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    statement                      shift and go to state 26
    expression                     shift and go to state 28
    controlStruct                  shift and go to state 27
    return                         shift and go to state 29
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 120

    (38) if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst . RBRA
    (20) linst -> linst . statement SEMI
    (22) linst -> linst . controlStruct
    (25) linst -> linst . expression SEMI
    (27) linst -> linst . return
    (34) statement -> . PRINT LPAREN paramcall RPAREN
    (39) statement -> . NAME EGAL expression
    (29) controlStruct -> . for
    (30) controlStruct -> . while
    (31) controlStruct -> . if
    (11) expression -> . RETURN expression
    (12) expression -> . RETURN
    (32) expression -> . NAME LPAREN paramcall RPAREN
    (33) expression -> . NAME LPAREN RPAREN
    (40) expression -> . expression INF expression
    (41) expression -> . expression INFEG expression
    (42) expression -> . expression EGALEGAL expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MODULO expression
    (50) expression -> . expression SUP expression
    (51) expression -> . expression SUPEG expression
    (52) expression -> . expression INC
    (53) expression -> . expression DEC
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . NAME
    (9) return -> . RETURN expression SEMI
    (10) return -> . RETURN SEMI
    (35) for -> . FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA
    (36) while -> . WHILE LPAREN expression RPAREN LBRA linst RBRA
    (37) if -> . IF LPAREN expression RPAREN LBRA linst RBRA
    (38) if -> . IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA

    RBRA            shift and go to state 122
    PRINT           shift and go to state 14
    NAME            shift and go to state 8
    RETURN          shift and go to state 18
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22

    expression                     shift and go to state 28
    statement                      shift and go to state 26
    controlStruct                  shift and go to state 27
    return                         shift and go to state 29
    for                            shift and go to state 15
    while                          shift and go to state 16
    if                             shift and go to state 17

state 121

    (35) for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .

    PRINT           reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    NAME            reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    RETURN          reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    LPAREN          reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    NUMBER          reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    FOR             reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    WHILE           reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    IF              reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    FUNCTIONDEF     reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    $end            reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)
    RBRA            reduce using rule 35 (for -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRA linst RBRA .)


state 122

    (38) if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .

    PRINT           reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    NAME            reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    RETURN          reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    LPAREN          reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    NUMBER          reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    FOR             reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    WHILE           reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    IF              reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    FUNCTIONDEF     reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    $end            reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)
    RBRA            reduce using rule 38 (if -> IF LPAREN expression RPAREN LBRA linst RBRA ELSE LBRA linst RBRA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for NAME in state 11 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 11 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 11 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 37 resolved as shift
WARNING: shift/reduce conflict for NAME in state 37 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 37 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 37 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 37 resolved as shift
WARNING: shift/reduce conflict for FOR in state 37 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 37 resolved as shift
WARNING: shift/reduce conflict for IF in state 37 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 54 resolved as shift
WARNING: shift/reduce conflict for INF in state 54 resolved as shift
WARNING: shift/reduce conflict for INFEG in state 54 resolved as shift
WARNING: shift/reduce conflict for EGALEGAL in state 54 resolved as shift
WARNING: shift/reduce conflict for AND in state 54 resolved as shift
WARNING: shift/reduce conflict for OR in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 54 resolved as shift
WARNING: shift/reduce conflict for SUP in state 54 resolved as shift
WARNING: shift/reduce conflict for SUPEG in state 54 resolved as shift
WARNING: shift/reduce conflict for INC in state 54 resolved as shift
WARNING: shift/reduce conflict for DEC in state 54 resolved as shift
WARNING: shift/reduce conflict for INF in state 68 resolved as shift
WARNING: shift/reduce conflict for INFEG in state 68 resolved as shift
WARNING: shift/reduce conflict for EGALEGAL in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 68 resolved as shift
WARNING: shift/reduce conflict for SUP in state 68 resolved as shift
WARNING: shift/reduce conflict for SUPEG in state 68 resolved as shift
WARNING: shift/reduce conflict for INC in state 68 resolved as shift
WARNING: shift/reduce conflict for DEC in state 68 resolved as shift
WARNING: shift/reduce conflict for INF in state 80 resolved as shift
WARNING: shift/reduce conflict for INFEG in state 80 resolved as shift
WARNING: shift/reduce conflict for EGALEGAL in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 80 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 80 resolved as shift
WARNING: shift/reduce conflict for SUP in state 80 resolved as shift
WARNING: shift/reduce conflict for SUPEG in state 80 resolved as shift
WARNING: shift/reduce conflict for INC in state 80 resolved as shift
WARNING: shift/reduce conflict for DEC in state 80 resolved as shift
